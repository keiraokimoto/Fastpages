{
  
    
        "post0": {
            "title": "College Board Grading Exercise",
            "content": "College Board Grading Exercise . Submission 1: . | Row Number | My Score + Reasoning | College Board Score + Why I Would Change My Score| | — | — | — | | 1 | 1, the program works as intended, calculating values based on the given triangle side length numbers.| 0, the program would not receive a 1 in this category because the written response does not describe the input nor output, nor specify the program’s purpose. | | 2 | 0, the program does not show that the inputs have been stored in a list. | 1, there are two code segments provided, and there is a list called ‘sideIndex’ in the program as well, with a correct response along with it.| | 3 | 0, the program, nor does the written response, does not explain how the code manages the complexity of the program using lists or otherwise. | 0, same score, different reasoning; the use of the list does not manage the complexity, as it is inaccurate in the written response, which discusses why lists are beneficial to the program. | | 4 | 1, there is more than one parameter that has an effect on how the prodecure is run, and a procedure is called. | 1, same score, same reasoning. | | 5 | 1, the algorithm being utilized contains sequences, selection, and iteration by manipulating the numbers given to produce results. | 1, same score, same reasoning, but could have added specifics regarding the iterative loop for variable i decreasing by 1 from A, B, or C. | | 6 | 1, in the written response, two calls are made to the selected procedure which allows the program to create an output from the given inputs. | 1, same score, same reasoning, different arguments are called. | . Submission 2: . | Row Number | My Score + Reasoning | College Board Score + Why I Would Change My Score| | — | —— | ——- | | 1 | 1, the written response states the program’s functionality, and the input and output are shown visually. | 1, same score, same reasoning. | | 2 | 1, there are two program segments provided, and a list is provided for data to be stored. | 1, same score, uses startGrid as the list. | | 3 | 1, complexity is managed through a system of inputs being used to control the program. | 1, same score, stores 10,800 items in a list. | 4 | 1, two program code segments are used, one where different inputs affect the procedure’s output and another where the procedure is called. | 1, same score, uses replaceList (procedure) with two parameters. | | 5 | 1, the program has multiple steps which are explained in the written portion. | 1, same score, same reasoning, includes sequencing, selection with an if/else statement, and iteration with a repeating loop. | | 6 | 1, there are different arguments passed into the code | 1, same score, same reasoning with inputs/outputs. | . Essentially, a program would need: . Lists that log input data | A loop | More than one procedure that can be called | A way to input something that changes what is output by the procedure | .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2023/01/04/markdown-21.html",
            "relUrl": "/post/2023/01/04/markdown-21.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 3 Lesson 16, Student Copy",
            "content": "Hack #1 - Class Notes . Simulations are used to simplify/modify certain variables | Simulations can contain bias | They can be used to simulate things as tests (ie, launching a bomb) when these actions are too dangerous/impractical to do in the real world | Simulations can also be used to create situations that are too difficult to recreate in the real world (specific weather conditions for example) | Random modules define series of objects that can be generated randomly | Randomization helps simulations, as they can help predict many varying probablilities of a simulation | Abstractions use conditionals to execute one part of the code only when a particular condition is met, repeat looping, simplification, and it does not request input from the user or display output to the user | It is far cheaper to create a simulation than to do said actions in real life | . erm hopefully thats enough notes i cant . Hack #2 - Functions Classwork . import random myclothes = [&quot;red shoes&quot;, &quot;green pants&quot;, &quot;tie&quot;, &quot;belt&quot;] def mycloset(): print(myclothes) def addCloth(): a = input() # tells the code to issue an input function print(&quot;Do you want to add any clothes? Type &#39;No&#39; or the item name.&quot;) if a != &quot;No&quot;: myclothes.append(a) #appends the input to the myclothes list print(&quot;Object&quot;, a, &quot;has been added.&quot;) return myclothes def removeCloth(): r = input() # tells the code to issue an input function print(&quot;Do you want to remove any clothes? Type &#39;No&#39; or the item name.&quot;) if r != &quot;No&quot;: if (r in myclothes): # removes whatever the user types myclothes.remove(r) print(myclothes) print(&quot;Object&quot;, r, &quot;has been removed.&quot;) mycloset() addCloth() print(myclothes) removeCloth() # add myclothes function # trash myclothes function . [&#39;red shoes&#39;, &#39;green pants&#39;, &#39;tie&#39;, &#39;belt&#39;] Do you want to add any clothes? Type &#39;No&#39; or the item name. Object potato has been added. [&#39;red shoes&#39;, &#39;green pants&#39;, &#39;tie&#39;, &#39;belt&#39;, &#39;potato&#39;] Do you want to remove any clothes? Type &#39;No&#39; or the item name. [&#39;red shoes&#39;, &#39;green pants&#39;, &#39;tie&#39;, &#39;potato&#39;] Object belt has been removed. . Hack #3 - Binary Simulation Problem . import random def randomnum(start, end, n=8): # function for generating random int randNumList = [] for i in range(n): # in a range identified in the code randNumList.append(random.randint(start,end)) #randomizes random numbers print (&quot;Randomly generated number list:&quot;, randNumList) return randNumList def converttobin(randNumList): # function for converting decimal to binary divValue = randNumList # input (which is the randNumList) remainder = 1 results = [] #empty results list for whatever is appended for num in randNumList: # convert eah num to binary string and append it to result list divValue = num x = &#39;&#39; # keeps track of 1&#39;s in the loop (so it can go infinitely) while divValue &gt; 0: remainder = divValue % 2 # divides div val divValue = (int)(divValue / 2) # integer x div value/2 x = str(remainder) + x x = x.zfill(8) results.append(x) return results # FIrst, a function for randomizing decimal number 0-255 # Next, a function for converting this to a 8-bit binary number (one bit per person) # Lastly, a function to read the binary bits, and assign each person a label (zombie or naw) based on the position of 0s and 1s def survivors(binary): # function to assign position survivorstatus = [&quot;Kohaku Oukawa&quot;, &quot;Madara Mikejima&quot;, &quot;Kaname Tojou&quot;, &quot;Aira Shiratori&quot; , &quot;Kunikuzushi&quot;, &quot;Kazuha&quot;, &quot;Rook Hunt&quot;, &quot;Rinne Amagi&quot;] # replace the names above with your choice of people in the house i = 0 # index is 0 (empty) zombie = 0 # a zombie is a 0 alive = 1 # an alive person is a 1 resultList = {} # empty list for the results for b in binary: person = survivorstatus[i] # sets a person equal to a survivor status if b == &#39;0&#39;: # if a person&#39;s status is 0 , they are a zombie, if not, they are alive. Yippee !! resultList[person] = &quot;Zombie&quot; else: resultList[person] = &quot;Alive&quot; i = i + 1 # each result gets appended to the list print(resultList) return resultList for r in range(1): ranNums = randomnum(1, 100, 8) # generates numbers from 1-100, and only 8 of them binaryList = converttobin(ranNums) # the binary list is what has been given in the converttobin function print(binaryList) binary = random.choice(binaryList) # a random binary is chosen from the binary list survivors(binary) # calls the survivors binary function to run . Randomly generated number list: [73, 40, 46, 25, 1, 6, 12, 28] [&#39;01001001&#39;, &#39;00101000&#39;, &#39;00101110&#39;, &#39;00011001&#39;, &#39;00000001&#39;, &#39;00000110&#39;, &#39;00001100&#39;, &#39;00011100&#39;] {&#39;Kohaku Oukawa&#39;: &#39;Zombie&#39;, &#39;Madara Mikejima&#39;: &#39;Zombie&#39;, &#39;Kaname Tojou&#39;: &#39;Alive&#39;, &#39;Aira Shiratori&#39;: &#39;Zombie&#39;, &#39;Kunikuzushi&#39;: &#39;Alive&#39;, &#39;Kazuha&#39;: &#39;Zombie&#39;, &#39;Rook Hunt&#39;: &#39;Zombie&#39;, &#39;Rinne Amagi&#39;: &#39;Zombie&#39;} . Hack #4 - Thinking through a problem . create your own simulation involving a dice roll | should include randomization and a function for rolling + multiple trials | . import random def pull(): roll = [] # array for each result from rolling num = int(input()) # how many times the dice is rolled print(&quot;The amount of rolls you want is:&quot;, num) # printing number of rolls that are input for n in range(num): # for the number that was put in the input, start of the for loop result = random.randint(1, 6) # the results are any randomly generated number from 1 - 6 roll.append(result) # appends the randomly generated results to an array return roll #returns function dices = pull() # naming the function print(&quot;Your dice rolls are:&quot;, dices) # final print of the array . The amount of rolls you want is: 30 Your dice rolls are: [2, 1, 4, 5, 2, 1, 2, 3, 2, 3, 2, 1, 3, 4, 4, 3, 4, 3, 1, 6, 3, 6, 3, 6, 5, 1, 2, 4, 2, 6] . Hack 5 - Applying your knowledge to situation based problems . Using the questions bank below, create a quiz that presents the user a random question and calculates the user&#39;s score. You can use the template below or make your own. Making your own using a loop can give you extra points. . A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway. Several school administrators are concerned that the simulation contains bias favoring high-income students, however. answer options: The simulation is an abstraction and therefore cannot contain any bias | The simulation may accidentally contain bias due to the exclusion of details. | If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. | The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output. | | . | Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why? answer options No, it&#39;s not a simulation because it does not include a visualization of the results. | No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. | Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. | Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences. | | . | Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation? answer options Realistic sound effects based on the material of the baseball bat and the velocity of the hit | A depiction of an audience in the stands with lifelike behavior in response to hit accuracy | Accurate accounting for the effects of wind conditions on the movement of the ball | A baseball field that is textured to differentiate between the grass and the dirt | | . | Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment? answer options The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. | The simulation can be run more safely than an actual experiment | The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. | The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment. | | this question has 2 correct answers | . | Rinne Amagi wants to go to a casino, but Niki Shiina won&#39;t let him because he keeps wasting Niki&#39;s money, which is absolutely fair. He creates a computer simulation after much difficulty and suffering to gamble without Niki knowing, because he has an addiction. While his program is almost perfect, it lacks a good way to simulate a real casino, and the randomization is off. What are some things he could add to improve his simulation? (2 answers) Answer Options Niki Shiina dragging him out of the casino. | A randomization function, where each result has different chances to appear based on a percentage. | More items of different categories/ranks to make a bigger randomized simulation. | Throw his computer against a wall and cry because he&#39;s weak. | | . | Scaramouche has spent years trying to overthrow the Raiden Shogun, but to no avail. He is unfortunately the same element she is, and immunity is evil. He creates a simulation to determine what stance he should take to fight her, but thinks it&#39;s not close enough to reality. What could he add to his simulation to make it more realistic? Answer Options The Raiden Shogun&#39;s personal fox maiden. | He should take into account whether the Shogun is injured or not. | He should take the weather into account. | He should consider his life choices and have an existencial breakdown. | | . | questions = 6 correct = 0 import random questions_list = [ #questions [&quot;A researcher gathers data about the effect of Advanced Placement classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway. Several school administrators are concerned that the simulation contains bias favoring high-income students, however.&quot;], [&quot;Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why?&quot;], [&quot;Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation?&quot;], [&quot;Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment?&quot;], [&quot;Rinne Amagi wants to go to a casino, but Niki Shiina won&#39;t let him because he keeps wasting Niki&#39;s money, which is absolutely fair. He creates a computer simulation after much difficulty and suffering to gamble without Niki knowing, because he has an addiction. While his program is almost perfect, it lacks a good way to simulate a real casino, and the randomization is off. What are some things he could add to improve his simulation? (2 answers)&quot;], [&quot;Scaramouche has spent years trying to overthrow the Raiden Shogun, but to no avail. He is unfortunately the same element she is, and immunity is evil. He creates a simulation to determine what stance he should take to fight her, but thinks it&#39;s not close enough to reality. What could he add to his simulation to make it more realistic?&quot;], ] correct = [ # the answers in each list that are correct [&quot;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&quot;], [&quot;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&quot; ], [&quot;Accurate accounting for the effects of wind conditions on the movement of the ball.&quot;], [&quot;The simulation can be run more safely than an actual experiment.&quot;,&quot;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&quot;], [&quot;A randomization function, where each result has different chances to appear based on a percentage.&quot;,&quot;More items of different categories/ranks to make a bigger randomized simulation.&quot;], [&quot;He should take the weather into account.&quot;], ] answerChoices = [ # all answer possibilities for each question [&quot;The simulation is an abstraction and therefore cannot contain any bias.&quot;,&quot;The simulation may accidentally contain bias due to the exclusion of details.&quot;,&quot;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&quot;, &quot;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&quot;], [&quot;No, it&#39;s not a simulation because it does not include a visualization of the results.&quot;, &quot;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&quot;,&quot;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&quot;,&quot;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&quot;], [&quot;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&quot;,&quot;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&quot;,&quot;Accurate accounting for the effects of wind conditions on the movement of the ball.&quot;,&quot;A baseball field that is textured to differentiate between the grass and the dirt.&quot;], [&quot;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&quot;,&quot;The simulation can be run more safely than an actual experiment&quot;,&quot;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&quot;,&quot;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&quot;], [&quot;Niki Shiina dragging him out of the casino.&quot;,&quot;A randomization function, where each result has different chances to appear based on a percentage.&quot;,&quot;More items of different categories/ranks to make a bigger randomized simulation.&quot;,&quot;Throw his computer against a wall and cry because he&#39;s weak.&quot;], [&quot;The Raiden Shogun&#39;s personal fox maiden.&quot;,&quot;He should take into account whether the Shogun is injured or not.&quot;,&quot;He should take the weather into account.&quot;,&quot;He should consider his life choices and have an existencial breakdown.&quot;], ] points = [] #empty string to register points s = &quot;&quot; # i probably don&#39;t need this list because it&#39;s in the loop anyways but i&#39;m scared to break my code so it stays def questionloop(): s = &quot;&quot; # list for inputs count = 0 # starts the number of answered questions at 0 while (s != &quot;quit&quot; and count &lt;= 6): question = random.choice(questions_list) #randomizes questions print(question) print(answerChoices) s = input() # allows user to input answer print(s) if s == &quot;quit&quot;: # exits the quiz print(&quot;Quiz exited.&quot;) else: answercheck(s, question) count = count + 1 # adds to the question count so the loop stops when it hits 6 total = 0 #starts the total score at 0, adds for score in points: total += score print(&quot;Your final score is:&quot;, total) def answercheck(s, question): i = questions_list.index(question) # refers to the index of the question list matchedAnswers = list(filter(lambda item: item == s, correct[i])) # Filters wrong/right, if it&#39;s not in the list it&#39;s wrong, and that makes it appear as &#39;empty&#39; # (Tests, basically shows the len and if the len is &gt;1, the answer is correct) print(matchedAnswers , str(len(matchedAnswers))) if (len(matchedAnswers)) &gt;= 1: # if the length was marked as &#39;none&#39; (0) in the previous line, then it&#39;s measured (using len) and marked as incorrect points.append(1) # appends 1 point to the list of points print (points) print(&quot;Correct.&quot;) else: points.append(0) # appends 0 points to the list of points print(points) print(&quot;Incorrect.&quot;) # function to check if the answer was correct or not questionloop() . [&#34;Scaramouche has spent years trying to overthrow the Raiden Shogun, but to no avail. He is unfortunately the same element she is, and immunity is evil. He creates a simulation to determine what stance he should take to fight her, but thinks it&#39;s not close enough to reality. What could he add to his simulation to make it more realistic?&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0] Incorrect. [&#34;Scaramouche has spent years trying to overthrow the Raiden Shogun, but to no avail. He is unfortunately the same element she is, and immunity is evil. He creates a simulation to determine what stance he should take to fight her, but thinks it&#39;s not close enough to reality. What could he add to his simulation to make it more realistic?&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] He should take the weather into account. [0, 1] Correct. [&#34;Scaramouche has spent years trying to overthrow the Raiden Shogun, but to no avail. He is unfortunately the same element she is, and immunity is evil. He creates a simulation to determine what stance he should take to fight her, but thinks it&#39;s not close enough to reality. What could he add to his simulation to make it more realistic?&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0, 1, 0] Incorrect. [&#34;Rinne Amagi wants to go to a casino, but Niki Shiina won&#39;t let him because he keeps wasting Niki&#39;s money, which is absolutely fair. He creates a computer simulation after much difficulty and suffering to gamble without Niki knowing, because he has an addiction. While his program is almost perfect, it lacks a good way to simulate a real casino, and the randomization is off. What are some things he could add to improve his simulation? (2 answers)&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0, 1, 0, 0] Incorrect. [&#39;Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment?&#39;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0, 1, 0, 0, 0] Incorrect. [&#34;Rinne Amagi wants to go to a casino, but Niki Shiina won&#39;t let him because he keeps wasting Niki&#39;s money, which is absolutely fair. He creates a computer simulation after much difficulty and suffering to gamble without Niki knowing, because he has an addiction. While his program is almost perfect, it lacks a good way to simulate a real casino, and the randomization is off. What are some things he could add to improve his simulation? (2 answers)&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0, 1, 0, 0, 0, 0] Incorrect. [&#34;A researcher gathers data about the effect of Advanced Placement classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway. Several school administrators are concerned that the simulation contains bias favoring high-income students, however.&#34;] [[&#39;The simulation is an abstraction and therefore cannot contain any bias.&#39;, &#39;The simulation may accidentally contain bias due to the exclusion of details.&#39;, &#39;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&#39;, &#39;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&#39;], [&#34;No, it&#39;s not a simulation because it does not include a visualization of the results.&#34;, &#34;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&#34;, &#34;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&#34;, &#34;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&#34;], [&#39;Realistic sound effects based on the material of the baseball bat and the velocity of the hit.&#39;, &#39;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy.&#39;, &#39;Accurate accounting for the effects of wind conditions on the movement of the ball.&#39;, &#39;A baseball field that is textured to differentiate between the grass and the dirt.&#39;], [&#39;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&#39;, &#39;The simulation can be run more safely than an actual experiment&#39;, &#34;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&#34;, &#39;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&#39;], [&#39;Niki Shiina dragging him out of the casino.&#39;, &#39;A randomization function, where each result has different chances to appear based on a percentage.&#39;, &#39;More items of different categories/ranks to make a bigger randomized simulation.&#39;, &#34;Throw his computer against a wall and cry because he&#39;s weak.&#34;], [&#34;The Raiden Shogun&#39;s personal fox maiden.&#34;, &#39;He should take into account whether the Shogun is injured or not.&#39;, &#39;He should take the weather into account.&#39;, &#39;He should consider his life choices and have an existencial breakdown.&#39;]] [0, 1, 0, 0, 0, 0, 0] Incorrect. Your final score is: 1 . Hack #6 / Challenge - Taking real life problems and implementing them into code . Create your own simulation based on your experiences/knowledge! Be creative! Think about instances in your own life, science, puzzles that can be made into simulations . Some ideas to get your brain running: A simulation that breeds two plants and tells you phenotypes of offspring, an adventure simulation... . import random # I kinda wanted to do this but I ran out of time # I wanted to make a gacha simulator so just know that it will sit in this lesson like some sort of memorial. # Rest in peace gacha simulator. In another world I gambled using you. # 3 lists, 3 star 4star 5 star # randint.(0, 100), generate 10 random ints # if randint 0-75, print from the 3 star list, 76-99, print from the 4 star list, 100, print from the 5 star list .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/13/hw.html",
            "relUrl": "/2022/12/13/hw.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 3 Sections 14-15 Homework",
            "content": "Create a program that asks the user for a day and then gives them a distance in days between that day and another random day in the year. We have provided you with a possible starter, but you are welcome to change it up if you would like. . from datetime import date, timedelta, datetime import random minDate, maxDate = date(1900, 1, 1), date(2022, 12, 31) print(&quot;Date range: &quot; + str(minDate) + &quot; to &quot; + str(maxDate)) dateDays = maxDate - minDate totalDays = dateDays.days randDay = random.randrange(totalDays) randDate = minDate + timedelta(days=randDay) print(randDate) days_dictionary = { 1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31, } def inputDate(): day = &quot;&quot; month = &quot;&quot; year = &quot;&quot; datestr = &quot;&quot; quit = False # while (datestr != &quot;quit&quot;): while (True): print(&quot; nEnter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit.&quot;) # datestr = input() d = input() if (d == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break m = input() if (m == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break y = input() if (y == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break diffDate(int(d), int(m), int(y)) def diffDate(day, month, year): timePass = date(year, month, day) if (timePass &gt; randDate): finalTime = timePass - randDate else: finalTime = randDate - timePass print(randDate, &quot;is&quot;, finalTime, &quot;away from&quot;, month,&quot;-&quot;,day,&quot;-&quot;,year,&quot;.&quot;) def diffDate2(dateStr): splits = dateStr.split(&quot;-&quot;) day = int(splits[0]) print(day) month = int(splits[1]) print(month) year = int(splits[2]) print(year) print(splits) timePass = date(year, month, day) if (timePass &gt; randDate): finalTime = timePass - randDate else: finalTime = randDate - timePass print(finalTime) inputDate() # expected output shown below (or something similar) # Input a day # 13 # Input a month # 7 # Input a year # 2010 # user day: 07/13/2010 # random day: 09/11/2010 # The number of days between the given range of dates is: 60 . Date range: 1900-01-01 to 2022-12-31 1914-11-19 Enter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit. 1914-11-19 is 32216 days, 0:00:00 away from 2 - 1 - 2003 . Enter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit. Loop exited. .",
            "url": "https://keiraokimoto.github.io/Fastpages/week-13/big-idea-3/2022/12/12/libraries-hw-copy.html",
            "relUrl": "/week-13/big-idea-3/2022/12/12/libraries-hw-copy.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Sections 14-15 Homework",
            "content": "Notes: . (From the fill in the blanks) . Libraries . Okay, so we&#39;ve learned a lot of code, and all of you now can boast that you can code at least some basic programs in python. But, what about more advanced stuff? What if there&#39;s a more advanced program you don&#39;t know how to make? Do you need to make it yourself? Well, not always. . You&#39;ve already learned about functions that you can write to reuse in your code in previous lessons. But,there are many others who code in python just like you. So why would you do again what someone has already done, and is available for any python user? . Packages allow a python user to import methods from a library, and use the methods in their code. Most libraries come with documentation on the different methods they entail and how to use them, and they can be found with a quick Google search. Methods are used with the following: . Note: a method from a package can only be used after the import statement. . Some libraries are always installed, such as those with the list methods which we have previously discussed. But others require a special python keyword called import. We will learn different ways to import in Challenge 1. . Sometimes we only need to import a single method from the package. We can do that with the word &#39;from&#39;, followed by the package name, then the word &#39;import&#39;, then the method. This will alllow you to use the method without mentioning the package&#39;s name, unlike what we did before, however other methods from that package cannot be used. To get the best of both worlds you can use &#39;*&#39;. . To import a method as an easier name, just do what we did first, add the word &#39;as&#39;, and write the name you would like to use that package as. . Random values - Randomly generated numbers created using a large set of numbers and a mathematical algorithm | Random values are good for randomizing outputs, which can make sure that there are not as many similar outputs | Random values can also be used for anything including probability, which includes gacha, dice rolls, and more | Really not sure what other notes I can add here | Remember to import random before trying to use a randomizer | . Create a program that asks the user for a day and then gives them a distance in days between that day and another random day in the year. We have provided you with a possible starter, but you are welcome to change it up if you would like. . from datetime import date, timedelta, datetime import random minDate, maxDate = date(1900, 1, 1), date(2022, 12, 31) print(&quot;Date range: &quot; + str(minDate) + &quot; to &quot; + str(maxDate)) dateDays = maxDate - minDate totalDays = dateDays.days randDay = random.randrange(totalDays) randDate = minDate + timedelta(days=randDay) print(randDate) def inputDate(): day = &quot;&quot; month = &quot;&quot; year = &quot;&quot; datestr = &quot;&quot; quit = False # while (datestr != &quot;quit&quot;): while (True): print(&quot; nEnter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit.&quot;) # datestr = input() d = input() if (d == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break m = input() if (m == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break y = input() if (y == &quot;quit&quot;): print (&quot;Loop exited.&quot;) break diffDate(int(d), int(m), int(y)) def diffDate(day, month, year): timePass = date(year, month, day) if (timePass &gt; randDate): finalTime = timePass - randDate else: finalTime = randDate - timePass print(randDate, &quot;is&quot;, finalTime, &quot;away from&quot;, month,&quot;-&quot;,day,&quot;-&quot;,year,&quot;.&quot;) def diffDate2(dateStr): splits = dateStr.split(&quot;-&quot;) day = int(splits[0]) print(day) month = int(splits[1]) print(month) year = int(splits[2]) print(year) print(splits) timePass = date(year, month, day) if (timePass &gt; randDate): finalTime = timePass - randDate else: finalTime = randDate - timePass print(finalTime) inputDate() # expected output shown below (or something similar) # Input a day # 13 # Input a month # 7 # Input a year # 2010 # user day: 07/13/2010 # random day: 09/11/2010 # The number of days between the given range of dates is: 60 . Date range: 1900-01-01 to 2022-12-31 1983-01-04 Enter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit. 1983-01-04 is 7333 days, 0:00:00 away from 2 - 1 - 2003 . Enter a day, month, and year in the &#39;dd-mm-yyyy&#39; format or type &#39;quit&#39; to quit. Loop exited. . Homework . Given a random decimal number convert it into binary. As extra, convert it to hexidecimal as well. . import random def printrandom(randNum): randNum = random.randint(1,100) print (&quot;Randomly generated number:&quot;, randNum) divValue = randNum remainder = 1 binaryConv = &#39;&#39; while divValue &gt; 0: remainder = divValue % 2 divValue = (int)(divValue / 2) binaryConv = str(remainder) + binaryConv print(&quot;Randomly generated number&quot;, randNum ,&quot;is&quot;, binaryConv,&quot;in binary.&quot;) # (binary converter taken from previous homework) printrandom(1) . Randomly generated number: 89 Randomly generated number 89 is 1011001 in binary. . Challenge 1: Basic Libraries . Find a python package on the internet and import it | Choose a method from the package and import only the method | import the package as a more convenient name. | from datetime import date, timedelta, datetime import random minDate, maxDate = date(1900, 1, 1), date(2022, 12, 31) print(&quot;Date range: &quot; + str(minDate) + &quot; to &quot; + str(maxDate)) dateDays = maxDate - minDate totalDays = dateDays.days randDay = random.randrange(totalDays) randDate = minDate + timedelta(days=randDay) print(randDate) # used this in other assignment as well . Date range: 1900-01-01 to 2022-12-31 1918-10-18 . Challenge 1 . import random def coinflip(): flipCoin = random.choice([&quot;Heads&quot;, &quot;Tails&quot;]) print(flipCoin) coinflip() . Tails . Challenge 2: Turtle . Challenge 3: Math . The math package allows for some really cool mathematical methods! . Methods Action . ceil(x) | Returns whichever number is the next highest integer | . floor(x) | Rounds to largest integer less than or equal to x | . factorial(x) | Returns the factorial | . gcd(x, y) | Returns the greatest common denominator of x and y | . lcm(x, y) | Returns the least common multiple of x and y | . Challenge: Create a program which asks for a user input of two numbers, and returns the following: . each number rounded up | each number rounded down | the lcm of the rounded down numbers | the gcf of the rounded up numbers | the factorial of each number | something else using the math package! Documentation | . from math import * import math x = &quot;&quot; y = &quot;&quot; while ((x != &quot;quit&quot;) and (y != &quot;quit&quot;)): x = input() if (x == &quot;quit&quot;): break y = input() if (y == &quot;quit&quot;): break # my vscode is giving me an &#39;attribute does not exist&#39; for LCM and I am not fixing that so. just know that i tried xf = float(x) yf = float(y) ceilNumX = math.ceil(xf) floorNumX = math.floor(xf) ceilNumY = math.ceil(yf) floorNumY = math.floor(yf) factNumX = math.factorial(int(xf)) lcmNumXY = math.lcm(int(floorNumX), int(floorNumY)) gcdNumXY = math.gcd(int(ceilNumX), int(ceilNumY)) factNumY = math.factorial(int(yf)) sqrtNumX = math.isqrt(int(floorNumX)) sqrtNumY = math.isqrt(int(floorNumY)) print (&quot;Ceiling of&quot;, x ,&quot;=&quot;, ceilNumX) print (&quot;Floor of&quot;, x ,&quot;=&quot;, floorNumX) print (&quot;Factorial of&quot;, x ,&quot;=&quot;, factNumX) print (&quot;Ceiling of&quot;, y ,&quot;=&quot;, ceilNumY) print (&quot;Floor of&quot;, y ,&quot;=&quot;, floorNumY) print (&quot;LCM of&quot;, y, x ,&quot;=&quot;, lcmNumXY) print (&quot;GCD of&quot;, y, x,&quot;=&quot;, gcdNumXY) print (&quot;Factorial of&quot;, y ,&quot;=&quot;, factNumY) print (&quot;Square root of&quot;, x,&quot;=&quot;, sqrtNumX) print (&quot;Square root of&quot;, y,&quot;=&quot;, sqrtNumY) . Ceiling of 2.34 = 3 Floor of 2.34 = 2 Factorial of 2.34 = 2 Ceiling of 3.45 = 4 Floor of 3.45 = 3 LCM of 3.45 2.34 = 6 GCD of 3.45 2.34 = 1 Factorial of 3.45 = 6 Square root of 2.34 = 1 Square root of 3.45 = 1 . Homework: Putting it all together(complete only after the random values lesson) . Option 1: Create a python program which generates a random number between 1 and 10, and use turtle to draw a regular polygon with that many sides. As a hint, remember that the total sum of all the angles in a polygon is (the number of sides - 2) * 180. Note: a regular polygon has all sides and angles the same size. Paste a screenshot of the code and the drawing from repl.it . Option 2: use the &quot;datetime&quot; package, and looking up documentation, create a program to generate 2 random dates and find the number of days between . Extra ideas: customize the settings, draw a picture, or something else! . Enjoy my creative randition of what I wanted from turtle vs what I got (6 hours of buffering with no results to show). . import random import turtle turns = [] t = turtle.Turtle() randNum = random.randint(1, 10) sideLen = input() print (&quot;Randomly generated number:&quot;, randNum) print (&quot;User input side length:&quot;, sideLen) for c in [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;]: t.color(c) turns = 0 for r in range(randNum): t.forward(sideLen) t.left(360/randNum) turns = turns + 1 if turns == randNum: break # So, my turtle doesn&#39;t like me and doesn&#39;t want to work so I just made this &#39;theoretical&#39; code # Essentially, it&#39;s just supposed to generate a random number, which the code marks as the &#39;randNum&#39;, or in other words, the amount of sides # The user can also choose to input a side length # It then prints the side length and number of sides (these are mostly for testing) # The color is randomly selected # Then the turtle will move in accordance to the numbers it&#39;s been dealt # t.forward is the side lengths, and it will move in accordance to the input # t.left is the corners of the shape; since a full circle is 360 degrees, the turtle will turn in a degree that is 360/the randomly generated number so it can have the right amount of sides # If I actually coded this right, the turtle will end at the same plSpades it started and keep looping forever because I didn&#39;t put an end code. But that&#39;s ok my turtle doesn&#39;t work so you won&#39;t ever have to see its eternal suffering, brought on by the stupidity of none other than my lack of sleep and endless desire to drop school completely # Actually I lied, I added the ending code # There&#39;s a turn counter that adds 1 to a neat little index and if that index = the amount of rotations the turtle will stop (hopefully. It can just keep going if it wants to. Goodbye turtle you will be missed.) . EXTRA: . Create a function that will randomly select 5 playing Cards and check if the 5 cards are a Royal Flush. . import random randCardList = [&quot;Ace Spades&quot;,&quot;King Spades&quot;, &quot;Queen Spades&quot;,&quot;Jack Spades&quot;,&quot;2 Spades&quot;, &quot;3 Spades&quot;,&quot;4 Spades&quot;,&quot;5 Spades&quot;,&quot;6 Spades&quot;,&quot;7 Spades&quot;,&quot;8 Spades&quot;,&quot;9 Spades&quot;,&quot;10 Spades&quot;, &quot;Ace Diamonds&quot;, &quot;King Diamonds&quot;, &quot;Queen Diamonds&quot;,&quot;Jack Diamonds&quot;,&quot;2 Diamonds&quot;, &quot;3 Diamonds&quot;,&quot;4 Diamonds&quot;,&quot;5 Diamonds&quot;,&quot;6 Diamonds&quot;,&quot;7 Diamonds&quot;,&quot;8 Diamonds&quot;,&quot;9 Diamonds&quot;,&quot;10 Diamonds&quot;,&quot;Ace Clubs&quot;,&quot;King Clubs&quot;, &quot;Queen Clubs&quot;,&quot;Jack Clubs&quot;,&quot;2 Clubs&quot;, &quot;3 Clubs&quot;,&quot;4 Clubs&quot;,&quot;5 Clubs&quot;,&quot;6 Clubs&quot;,&quot;7 Clubs&quot;,&quot;8 Clubs&quot;,&quot;9 Clubs&quot;,&quot;10 Clubs&quot;,&quot;Ace Hearts&quot;,&quot;King Hearts&quot;, &quot;Queen Hearts&quot;,&quot;Jack Hearts&quot;,&quot;2 Hearts&quot;, &quot;3 Hearts&quot;,&quot;4 Hearts&quot;,&quot;5 Hearts&quot;,&quot;6 Hearts&quot;,&quot;7 Hearts&quot;,&quot;8 Hearts&quot;,&quot;9 Hearts&quot;,&quot;10 Hearts&quot;,] flushList = [&quot;Ace Spades&quot;,&quot;King Spades&quot;, &quot;Queen Spades&quot;,&quot;Jack Spades&quot;, &quot;10 Spades&quot;] # Honestly I was going to try doing each Royal Flush but it was 12:30am and I was crying so I didn&#39;t but I was able to do one set def randCard(start, end, n = 5): cardListCount = 0 cardList = [] while (cardListCount &lt; n): r = random.randint(start, end-1) if r in cardList: continue cardList.append(r) cardListCount = cardListCount + 1 print (&quot;Randomly generated card list:&quot;, cardList) return cardList def check(cardList): corCount = 0 for cardIndex in cardList: ic = randCardList[cardIndex] if ic in flushList: corCount = corCount + 1 print(corCount,&quot;/5 cards in a Royal Flush&quot;) if corCount == 5: print(&quot;Royal Flush&quot;) cardRand = randCard(0, ((len(randCardList)) ), 5) print(cardRand) check(cardRand) . Randomly generated card list: [38, 45, 15, 25, 3] [38, 45, 15, 25, 3] 0 /5 cards in a Royal Flush 0 /5 cards in a Royal Flush 0 /5 cards in a Royal Flush 0 /5 cards in a Royal Flush 1 /5 cards in a Royal Flush .",
            "url": "https://keiraokimoto.github.io/Fastpages/week-13/big-idea-3/2022/12/12/Unit-3.14-3.15-HW.html",
            "relUrl": "/week-13/big-idea-3/2022/12/12/Unit-3.14-3.15-HW.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 3.15 Random Values Student Copy",
            "content": "Purpose/Objectives: Teach student how to implement randomness into their code to make their code simulate real life situations. . In this lesson students will learn: . How to import random to python | How to use random with a list or number range | How to code randomness in everyday scenarios | . ADD YOUR ADDITIONAL NOTES HERE: . What are Random Values? . Random Values are a number generated using a large set of numbers and a mathematical algorithm which gives equal probability to all number occuring . Each Result from randomization is equally likely to occur Using random number generation in a program means each execution may produce a different result . What are Examples of Random outputs in the world? Add a few you can think of. . Ex: Marbles | . Why do we need Random Values for code? . Random values are good for generating random numbers, which can be used in statistics to generate randomly selected groups that eliminate bias. Random values are also good for generating urls (more specifically, urls for sites such as Youtube where each video needs a random number at the end of its address). . Random values can be used in coding: . import random random_number = random.randint(1,100) print(random_number) . 87 . def randomlist(): list = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;blueberry&quot;] element = random.choice(list) print(element) randomlist() . banana . Real Life Examples: Dice Roll . import random for i in range(3): roll = random.randint(1,6) print(&quot;Roll &quot; + str(i + 1) + &quot;:&quot; + str(roll)) . Roll 1:4 Roll 2:4 Roll 3:4 . Challenge #1 . Write a function that will a simulate a coinflip and print the output . import random def coinflip(): flipCoin = random.choice([&quot;Heads&quot;, &quot;Tails&quot;]) print(flipCoin) coinflip() . Tails . EXTRA: Create a function that will randomly select 5 playing Cards and check if the 5 cards are a Royal Flush . import random randCardList = &quot;&quot; randCardList = [] def randCard(start, end, n=8): # function for generating random int randCardList = [] for i in range(n): # in a range identified in the code randCardList.append(random.random(start,end)) #randomizes random numbers print (&quot;Randomly generated number list:&quot;, randCardList) return randCardList if randCardList = ????? print(&quot;Royal Flush&quot;) for r in range(1): ranNums = randCardList(1, 100, 5) # generates numbers from 1-100, and only 8 of them binary = random.choice(randCardList) # a random binary is chosen from the binary list . Homework . Given a random decimal number convert it into number. As extra, convert it to hexidecimal as well. . import random def printrandom(randNum): randNum = random.randint(1,100) print (&quot;Randomly generated number:&quot;, randNum) divValue = randNum remainder = 1 binaryConv = &#39;&#39; while divValue &gt; 0: remainder = divValue % 2 divValue = (int)(divValue / 2) binaryConv = str(remainder) + binaryConv print(&quot;Randomly generated number&quot;, randNum ,&quot;is&quot;, binaryConv,&quot;in number.&quot;) # (number converter taken from previous homework) printrandom(1) . Randomly generated number: 36 Randomly generated number 36 is 100100 in binary. .",
            "url": "https://keiraokimoto.github.io/Fastpages/week-13/big-idea-3/2022/12/12/3.15-HW.html",
            "relUrl": "/week-13/big-idea-3/2022/12/12/3.15-HW.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 3.14 Libraries Lesson",
            "content": "Purpose: Help students streamline and make their coding experience easier through built in packages and methods from a library Objective: By the end of the lesson, students should be able to fluently use methods from the turtle and math packages, and be able to look up documentation for any python package and us it. . fill in the blanks! . Libraries . Okay, so we&#39;ve learned a lot of code, and all of you now can boast that you can code at least some basic programs in python. But, what about more advanced stuff? What if there&#39;s a more advanced program you don&#39;t know how to make? Do you need to make it yourself? Well, not always. . You&#39;ve already learned about functions that you can write to reuse in your code in previous lessons. But,there are many others who code in python just like you. So why would you do again what someone has already done, and is available for any python user? . Packages allow a python user to import methods from a library, and use the methods in their code. Most libraries come with documentation on the different methods they entail and how to use them, and they can be found with a quick Google search. Methods are used with the following: . Note: a method from a package can only be used after the import statement. . Some libraries are always installed, such as those with the list methods which we have previously discussed. But others require a special python keyword called import. We will learn different ways to import in Challenge 1. . Sometimes we only need to import a single method from the package. We can do that with the word &#39;from&#39;, followed by the package name, then the word &#39;import&#39;, then the method. This will alllow you to use the method without mentioning the package&#39;s name, unlike what we did before, however other methods from that package cannot be used. To get the best of both worlds you can use &#39;*&#39;. . To import a method as an easier name, just do what we did first, add the word &#39;as&#39;, and write the name you would like to use that package as. . Challenge 1: Basic Libraries . Find a python package on the internet and import it | Choose a method from the package and import only the method | import the package as a more convenient name. | from datetime import date, timedelta, datetime import random minDate, maxDate = date(1900, 1, 1), date(2022, 12, 31) print(&quot;Date range: &quot; + str(minDate) + &quot; to &quot; + str(maxDate)) dateDays = maxDate - minDate totalDays = dateDays.days randDay = random.randrange(totalDays) randDate = minDate + timedelta(days=randDay) print(randDate) # used this in other assignment as well . Date range: 1900-01-01 to 2022-12-31 2016-12-29 . Challenge 2: Turtle . Turtle is a python drawing package which allows you to draw all kinds of different shapes. It&#39;s ofter used to teach beginning python learners, but is really cool to use anywhere. Turtle employs a graphics package to display what you&#39;ve done, but unfortunately it&#39;s kind of annoying to make work with vscode. Use: repl.it Click &quot;+ Create&quot;, and for language, select &quot;Python (with Turtle)&quot; Documentation Task: Have fun with turtle! Create something that uses at least 2 lines of different lengths and 2 turns with different angles, and changes at least one setting about either the pen or canvas. Also use one command that isn&#39;t mentioned on the table below(there are a lot). Paste a screenshot of the code and the drawing from repl.it . Commands . forward(pixels) | . right(degrees) | . left(degrees) | . setpos(x,y) | . speed(speed) | . pensize(size) | . pencolor(color) | . Note: Color should be within quotes, like &quot;brown&quot;, or &quot;red&quot; . from turtle import * oogway = Turtle() . Challenge 3: Math . The math package allows for some really cool mathematical methods! . Methods Action . ceil(x) | Returns whichever number is the next highest integer | . floor(x) | Rounds to largest integer less than or equal to x | . factorial(x) | Returns the factorial | . gcd(x, y) | Returns the greatest common denominator of x and y | . lcm(x, y) | Returns the least common multiple of x and y | . Challenge: Create a program which asks for a user input of two numbers, and returns the following: . each number rounded up | each number rounded down | the lcm of the rounded down numbers | the gcf of the rounded up numbers | the factorial of each number | something else using the math package! Documentation | . from math import * import math x = &quot;&quot; y = &quot;&quot; while ((x != &quot;quit&quot;) and (y != &quot;quit&quot;)): x = input() if (x == &quot;quit&quot;): break y = input() if (y == &quot;quit&quot;): break # my vscode is giving me an &#39;attribute does not exist&#39; for LCM and I am not fixing that so. just know that i tried xf = float(x) yf = float(y) ceilNumX = math.ceil(xf) floorNumX = math.floor(xf) ceilNumY = math.ceil(yf) floorNumY = math.floor(yf) factNumX = math.factorial(int(xf)) lcmNumXY = math.lcm(int(floorNumX), int(floorNumY)) gcdNumXY = math.gcd(int(ceilNumX), int(ceilNumY)) factNumY = math.factorial(int(yf)) sqrtNumX = math.isqrt(int(floorNumX)) sqrtNumY = math.isqrt(int(floorNumY)) print (&quot;Ceiling of&quot;, x ,&quot;=&quot;, ceilNumX) print (&quot;Floor of&quot;, x ,&quot;=&quot;, floorNumX) print (&quot;Factorial of&quot;, x ,&quot;=&quot;, factNumX) print (&quot;Ceiling of&quot;, y ,&quot;=&quot;, ceilNumY) print (&quot;Floor of&quot;, y ,&quot;=&quot;, floorNumY) print (&quot;LCM of&quot;, y, x ,&quot;=&quot;, lcmNumXY) print (&quot;GCD of&quot;, y, x,&quot;=&quot;, gcdNumXY) print (&quot;Factorial of&quot;, y ,&quot;=&quot;, factNumY) print (&quot;Square root of&quot;, x,&quot;=&quot;, sqrtNumX) print (&quot;Square root of&quot;, y,&quot;=&quot;, sqrtNumY) . Ceiling of 2.34 = 3 Floor of 2.34 = 2 Factorial of 2.34 = 2 Ceiling of 3.45 = 4 Floor of 3.45 = 3 LCM of 3.45 2.34 = 6 GCD of 3.45 2.34 = 1 Factorial of 3.45 = 6 Square root of 2.34 = 1 Square root of 3.45 = 1 . Homework: Putting it all together(complete only after the random values lesson) . Option 1: Create a python program which generates a random number between 1 and 10, and use turtle to draw a regular polygon with that many sides. As a hint, remember that the total sum of all the angles in a polygon is (the number of sides - 2) * 180. Note: a regular polygon has all sides and angles the same size. Paste a screenshot of the code and the drawing from repl.it . Option 2: use the &quot;datetime&quot; package, and looking up documentation, create a program to generate 2 random dates and find the number of days between . Extra ideas: customize the settings, draw a picture, or something else! . import random import turtle turns = [] t = turtle.Turtle() randNum = random.randint(1, 10) sideLen = input() print (&quot;Randomly generated number:&quot;, randNum) print (&quot;User input side length:&quot;, sideLen) for c in [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;]: t.color(c) turns = 0 for r in range(randNum): t.forward(sideLen) t.left(360/randNum) turns = turns + 1 if turns == randNum: break # So, my turtle doesn&#39;t like me and doesn&#39;t want to work so I just made this &#39;theoretical&#39; code # Essentially, it&#39;s just supposed to generate a random number, which the code marks as the &#39;randNum&#39;, or in other words, the amount of sides # The user can also choose to input a side length # It then prints the side length and number of sides (these are mostly for testing) # The color is randomly selected # Then the turtle will move in accordance to the numbers it&#39;s been dealt # t.forward is the side lengths, and it will move in accordance to the input # t.left is the corners of the shape; since a full circle is 360 degrees, the turtle will turn in a degree that is 360/the randomly generated number so it can have the right amount of sides # If I actually coded this right, the turtle will end at the same place it started and keep looping forever because I didn&#39;t put an end code. But that&#39;s ok my turtle doesn&#39;t work so you won&#39;t ever have to see its eternal suffering, brought on by the stupidity of none other than my lack of sleep and endless desire to drop school completely # Actually I lied, I added the ending code # There&#39;s a turn counter that adds 1 to a neat little index and if that index = the amount of rotations the turtle will stop (hopefully. It can just keep going if it wants to. Goodbye turtle you will be missed.) . TclError Traceback (most recent call last) /mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb Cell 11 in &lt;cell line: 4&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; import random &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; import turtle -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; t = turtle.Turtle() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; randNum = [] &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/Keira/vscode/Fastpages/_notebooks/2022-12-12-3.14-Libraries.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; def printRan(randNum): File ~/anaconda3/lib/python3.9/turtle.py:3814, in Turtle.__init__(self, shape, undobuffersize, visible) 3809 def __init__(self, 3810 shape=_CFG[&#34;shape&#34;], 3811 undobuffersize=_CFG[&#34;undobuffersize&#34;], 3812 visible=_CFG[&#34;visible&#34;]): 3813 if Turtle._screen is None: -&gt; 3814 Turtle._screen = Screen() 3815 RawTurtle.__init__(self, Turtle._screen, 3816 shape=shape, 3817 undobuffersize=undobuffersize, 3818 visible=visible) File ~/anaconda3/lib/python3.9/turtle.py:3664, in Screen() 3660 &#34;&#34;&#34;Return the singleton screen object. 3661 If none exists at the moment, create a new one and return it, 3662 else return the existing one.&#34;&#34;&#34; 3663 if Turtle._screen is None: -&gt; 3664 Turtle._screen = _Screen() 3665 return Turtle._screen File ~/anaconda3/lib/python3.9/turtle.py:3680, in _Screen.__init__(self) 3673 def __init__(self): 3674 # XXX there is no need for this code to be conditional, 3675 # as there will be only a single _Screen instance, anyway 3676 # XXX actually, the turtle demo is injecting root window, 3677 # so perhaps the conditional creation of a root should be 3678 # preserved (perhaps by passing it as an optional parameter) 3679 if _Screen._root is None: -&gt; 3680 _Screen._root = self._root = _Root() 3681 self._root.title(_Screen._title) 3682 self._root.ondestroy(self._destroy) File ~/anaconda3/lib/python3.9/turtle.py:435, in _Root.__init__(self) 434 def __init__(self): --&gt; 435 TK.Tk.__init__(self) File ~/anaconda3/lib/python3.9/tkinter/__init__.py:2270, in Tk.__init__(self, screenName, baseName, className, useTk, sync, use) 2268 baseName = baseName + ext 2269 interactive = False -&gt; 2270 self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use) 2271 if useTk: 2272 self._loadtk() TclError: no display name and no $DISPLAY environment variable .",
            "url": "https://keiraokimoto.github.io/Fastpages/week-13/big-idea-3/2022/12/12/3.14-Libraries.html",
            "relUrl": "/week-13/big-idea-3/2022/12/12/3.14-Libraries.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 3.9 + 3.11 Homework",
            "content": "Notes: . Binary search: . One of the two searches that can be used | Can only be used with sorted arrays | Can be used in a while loop or recursive function | Uses a min/max value, halves it, and tests to see if the selected half value matches a requirement; if it doesn&#39;t, it takes either a higher or lower value (whichever is closer) to retest | . Sequential search: . Usually slower than a Binary Search, as it goes through every element in a list | Can be used in a while loop or recursive function | Should not be used for long calculations unless you want to explode your computer | . Challenges and Homework . You have one homework problem. . Yes just one. . Don&#39;t get excited though. . Problem: Given a specific integer N, return the square root of N (R) if N is a perfect square, otherwise, return the square root of N rounded down to the nearest integer . Input: N (Integer) . Output: R (Integer) . Constraints: Do not use any built-in math operations such as sqrt(x) or x**(0.5), Try complete the problem in logarithmic time. . Hint 1: Maybe you can use Binary Search to try and reduce the number of checks you have to perform? . Hint 2: Is there a mathematical pattern amongst numbers and their square roots that could help you reduce the number of searches or iterations you must execute? Is there some value or rule you can set before applying binary search to narrow the range of possible values? . Run the very last code segment below to load test cases and submission function . def binarySearch(N): low = 0 high = N while high &gt;= low: mid = (high + low) // 2 if mid * mid == N: return mid elif mid * mid &gt; N: high = mid - 1 else: low = mid + 1 return 0 from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid():0000000 for i in range(len(test_cases)): if binarySearch(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() # ignore def sqrt(N), this was just testing one method of finding the square root def sqrtTest(N): if (N % 2) == 0: index = 2 else: index = 1 divV = index result = 0 while (result != divV): result = N / divV if (divV == result): return result divV = divV + index return 0 r = sqrtTest(100) print( (r),&quot;(Ignore this, it&#39;s just the test method code that runs slower than my PC trying to open Genshin Impact :) )&quot;) def binsearchsqrt(N): if (N % 2) == 0: index = 2 else: index = 1 divV = index result = 0 while (result != divV): result = N / divV if (divV == result): return result divV = divV + index return 0 . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed 10.0 (Ignore this, it&#39;s just the test method code that runs slower than my PC trying to open Genshin Impact :) ) . from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid():0000000 for i in range(len(test_cases)): if binarySearch(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed . Unit 3.9 Homework . def calculateNumber(num): result = num if (num == 0): return [] result_list = [result] while result != 1: if (result % 2 == 0): # use mod = remander = 0 -&gt; even. 1 = odd result = result / 2 else: result = result * 3 + 1 result_list.append(int(result)) # appends the result to a string of results so it can be printed later return result_list # Input function s = &quot;&quot; while (s != &quot;q&quot;): print(&quot; nEnter a number or type &#39;q&#39; to quit.&quot;) s = input() try: if s != &quot;q&quot;: num = (int(s)) resultFinal = calculateNumber(num) print(resultFinal) except ValueError: print (&quot;Invalid input.&quot;) . Enter a number or type &#39;q&#39; to quit. [6, 3, 10, 5, 16, 8, 4, 2, 1] Enter a number or type &#39;q&#39; to quit. [1500, 750, 375, 1126, 563, 1690, 845, 2536, 1268, 634, 317, 952, 476, 238, 119, 358, 179, 538, 269, 808, 404, 202, 101, 304, 152, 76, 38, 19, 58, 29, 88, 44, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1] Enter a number or type &#39;q&#39; to quit. Invalid input. Enter a number or type &#39;q&#39; to quit. . Developing Algorithms (JavaScript) Challenge . I hope you don&#39;t mind the Javascript Emulator screenshot, but here is the finished challenge: . .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/09/Unit-3.9-3.11.html",
            "relUrl": "/2022/12/09/Unit-3.9-3.11.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Note Template",
            "content": "Take some additional notes that you would like here for 3.12 and 3.13. We will be looking for additional notes from the presentation. . What are procedures? . Fill in the blanks please: . Procedure: A named group of programming instructions that may have parameters and return values; can also be referred as method or function, depending on the language. . Parameters: Input values of a procedure . Arguments: Specify the values of the parameters when a procedure is called . Modularity: Sparating a program&#39;s functions into independent blocks that work together to allow a program to function . Procedural Abstraction: Multiple procedures that can be called to execute a program . What are some other names for procedures?: Processes, operations, modules . Why are procedures effective?: Procedures are effective because they allow for code to be more organized while still retaining functionality . Challenge 1 below: . Add the command that will call the procedure. . decimal = 7 def convertToBinary(decimal): divValue = decimal remainder = 1 finalBin = &#39;&#39; while divValue &gt; 0: remainder = divValue % 2 divValue = (int)(divValue / 2) finalBin = str(remainder) + finalBin return finalBin binary = convertToBinary(decimal) print(binary) . 111 . Challenge 2 below: . Complete the Min and Max procedure in either JavaScript and Python using the instructions from the JavaScript page. (JavaScript will get you a extra 0.1) . numA = 1000 numB = 1 # Repeat the process, this time creating a procedure called findMin, which will print the parameter with a smaller value. def findMin(numA, numB): if numA &gt; numB: return(numB) else: return(numA) # Within the procedure, write the code to determine which of the two parameters, numberA or numberB, is the larger value. Print that value. def findMax(numA, numB): if numA &lt; numB: return(numB) else: return(numA) findMin(1000, 1) # drivers for min and max findMax(1000, 1) # Call both functions so that the parameters numberA and numberB are given a value. resultMin = findMin(numA, numB) resultMax = findMax(numA, numB) print(&quot;Between&quot;, (numA), &quot;and &quot;, (numB),&quot;,&quot;,(resultMin), &quot;is the smaller number.&quot;) print(&quot;Between&quot;, (numA), &quot;and &quot;, (numB),&quot;,&quot;,(resultMax), &quot;is the bigger number.&quot;) # Optional bonus- create a procedure that can determine the minimum or maximum value out of more than two parameters. # haha... no . . Between 1000 and 1 , 1 is the smaller number. Between 1000 and 1 , 1000 is the bigger number. . // Start by creating a procedure called findMax and set the parameters to numberA and numberB. // Failed javascript attempt ignore this . // Within the procedure, write the code to determine which of the two parameters, numberA or numberB, is the larger value. Print that value. // Repeat the process, this time creating a procedure called findMin, which will print the parameter with a smaller value. // Call both functions so that the parameters numberA and numberB are given a value. // Optional bonus- create a procedure that can determine the minimum or maximum value out of more than two parameters. . Homework/Hacks: . For the hw, you have two options, easy or hard. The easy hack is for a 2.7 + extra work for the full 3. The easy hack is simply creating your own procedure with your own creativity. Since there is a lot of leeway for this one, you must do additional work to get a 3. For the hard hack, below is the start to a character to binary convertor. This is just a template, but the goal is to translate &quot;APCSP&quot; into binary. You can delete the existing code if you want. The only contraint is that you must use a procedure. Doing this will get you a 3. . x = &#39;APCSP&#39; def charToBinary(x): byteString = bytearray(x,&#39;utf-8&#39;) # result = [] for byteValue in byteString: result.append(format( byteValue, &#39;b&#39;)) print((x), &#39;in binary is:&#39;, (result)) charToBinary(x) # The output shown below is the output you are supposed to get # &#39;&#39;APCSP&#39;&#39; in binary is # [1000001, 1010000, 1000011, 1010011, 1010000] . APCSP in binary is: [&#39;1000001&#39;, &#39;1010000&#39;, &#39;1000011&#39;, &#39;1010011&#39;, &#39;1010000&#39;] .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/08/Unit-3.12-3.13.html",
            "relUrl": "/2022/12/08/Unit-3.12-3.13.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Searching Introduction",
            "content": "What is searching? . In certain computer programs and applications, one might find the need to locate and retrieve a data value and/or it&#39;s index. Searching algorithms could be done in either intervals or sequences, and certain algorithms could be more efficient than others, with benefits and drawbacks to each. . The Naive Approach . The most intuitively obvious solution to the searching problem is to sequentialy check each successful value in the data structure until either a matching value is found, or the entire structure has been transversed. This thought process could be explained graphically in this example . TypeError Traceback (most recent call last) File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1032, in Image._data_and_metadata(self, always_both) 1031 try: -&gt; 1032 b64_data = b2a_base64(self.data).decode(&#39;ascii&#39;) 1033 except TypeError as e: TypeError: a bytes-like object is required, not &#39;str&#39; The above exception was the direct cause of the following exception: FileNotFoundError Traceback (most recent call last) File ~/.local/lib/python3.8/site-packages/IPython/core/formatters.py:973, in MimeBundleFormatter.__call__(self, obj, include, exclude) 970 method = get_real_method(obj, self.print_method) 972 if method is not None: --&gt; 973 return method(include=include, exclude=exclude) 974 return None 975 else: File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1022, in Image._repr_mimebundle_(self, include, exclude) 1020 if self.embed: 1021 mimetype = self._mimetype -&gt; 1022 data, metadata = self._data_and_metadata(always_both=True) 1023 if metadata: 1024 metadata = {mimetype: metadata} File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1034, in Image._data_and_metadata(self, always_both) 1032 b64_data = b2a_base64(self.data).decode(&#39;ascii&#39;) 1033 except TypeError as e: -&gt; 1034 raise FileNotFoundError( 1035 &#34;No such file or directory: &#39;%s&#39;&#34; % (self.data)) from e 1036 md = {} 1037 if self.metadata: FileNotFoundError: No such file or directory: &#39;../images/SequentialSearch.png&#39; . TypeError Traceback (most recent call last) File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1032, in Image._data_and_metadata(self, always_both) 1031 try: -&gt; 1032 b64_data = b2a_base64(self.data).decode(&#39;ascii&#39;) 1033 except TypeError as e: TypeError: a bytes-like object is required, not &#39;str&#39; The above exception was the direct cause of the following exception: FileNotFoundError Traceback (most recent call last) File ~/.local/lib/python3.8/site-packages/IPython/core/formatters.py:343, in BaseFormatter.__call__(self, obj) 341 method = get_real_method(obj, self.print_method) 342 if method is not None: --&gt; 343 return method() 344 return None 345 else: File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1054, in Image._repr_png_(self) 1052 def _repr_png_(self): 1053 if self.embed and self.format == self._FMT_PNG: -&gt; 1054 return self._data_and_metadata() File ~/.local/lib/python3.8/site-packages/IPython/core/display.py:1034, in Image._data_and_metadata(self, always_both) 1032 b64_data = b2a_base64(self.data).decode(&#39;ascii&#39;) 1033 except TypeError as e: -&gt; 1034 raise FileNotFoundError( 1035 &#34;No such file or directory: &#39;%s&#39;&#34; % (self.data)) from e 1036 md = {} 1037 if self.metadata: FileNotFoundError: No such file or directory: &#39;../images/SequentialSearch.png&#39; . &lt;IPython.core.display.Image object&gt; . This algorithm could also be expressed in code, as shown below. . def sequentialSearch(arr, target): N = len(arr) # Declare N as length of array for i in range(N): # Iterate over the list if arr[i] == target: # Check for match return i # Match found, return index and end function call return -1 # Element not found . Sequential Search - Larger Inputs . Although for selection sort is seemingly fast for smaller inputs, it is clear that it cannot keep up with increasing input sizes. Because sequential search checks every value of the given array, the algorithm&#39;s overall runtime increases &quot;linearly&quot; with the input size. . i.e. Pretend that one check takes one second, and that we are searching for the last element in an array. If the array length is 4, it would take 4 seconds to find the last element, whereas if the array length is 86400 indices long, it would take a whole day to find the element. . Hence, although selection sort is known for its simplicity, it is unfeasible for large inputs . Below, we have created three sorted lists of length 100,1000000,100000000. . import time arr1 = [i for i in range(100)] arr2 = [i for i in range(1000000)] arr3 = [i for i in range(100000000)] . To analyze the sequential search algorithm, we will check for the worst case scenario, where runtime is maximized. This is because when measuring the efficiency of our algorithm, we want to be able to guarantee an upper limit or set amount of time for our program to finish running. To do this, we will attempt to search for the last element in the array . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.05602836608886719 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 58.67457389831543 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 5162.384986877441 ms . As you can see, as the input list grows larger and larger, the overall runtime of the program increases linearly as well, resulting in a lower scalability for the sequential search algorithm. . Binary Search . Binary search is an efficient way to iterate through a SORTED list to find a requested value. This is done through checking the middle value of a list and checking if the requested value is greater than or less than the middle value. You can start to see why the requested list must be sorted. If the list is not sorted, this logic is flawed, and the binary search algorithm will no longer work. . Unlike the sequential search method, binary search doesn&#39;t check for each successive element until a match is found. In every iteration the algorithm is making a binary decision; if the selected element is larger or smaller than the target. . How exactly does this work? Lets look at these amazing ms paint drawings: . i was too lazy to make a third so ur gonna have to live with 2 :) . This algorithm is extremely efficient as the maximum number of cycles in binary search is equal to log base 2 of the closest, next power of two, to length of list. . If the array is 8 items long, the maximum possible cycles would be 3 (log base 2 of 8 is 3) . If the array is 7 items long, the maximum possible cycles would STILL be 3 as the closest power of 2 to 7 is 8. . If the array is 9 items long, the maximum possible cycles INCREASES to 4, as the closest, next power of two, is 16. . def binarySearch(array, target): # Parameters: array is the given array and target is what we are looking for low = 0 # the starting lower bound high = len(array)-1 # the starting upper bound while high &gt;= low: # we will keep running until we run out of possible subarrays... mid = (high + low) // 2 # define the middle of the list to be the item at the index of the average of the lower and upper bound if array[mid] == target: # if item is in the middle of the list... we found what we are looking for! return mid # therefore, we return the index of where we found the item. elif array[mid] &gt; target: # if item is less than the middle of the list, this must mean that the item is on the lower half of the list high = mid-1 # therefore, we set the upper bound of the search to be the last item of the lower half else: # if item is neither less than or equal to the middle of the list, this must mean that the item is on the upper half of the list low = mid+1 # therefore, we set the lower bound of the search to be the first item of the upper half # if nothing is returned by the time the while loop ends, that means item MUST be missing from list return False # therefore we tell the user that the requested item was not found . Likewise, we can also take a recursive approach to this problem, note the similarities . def BinarySearchRecursion(arr, target, lo, hi): if lo &gt; hi: return False mid = (lo+hi)//2 if arr[mid] == target: return mid elif arr[mid] &gt; target: return BinarySearchRecursion(arr, target, lo, mid-1) elif arr[mid] &lt; target: return BinarySearchRecursion(arr, target, mid+1, hi) . Now, let&#39;s compare the runtime with the same lists we tried with the sequential search algorithm. . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.05507469177246094 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 0.17070770263671875 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 0.06628036499023438 ms . arr4 = [1,4,5,8,10,13,145,1938] print(&quot;Index: &quot;, binarySearch(arr4,17)) . Index: False . Challenges and Homework . You have one homework problem. . Yes just one. . Don&#39;t get excited though. . Problem: Given a specific integer N, return the square root of N (R) if N is a perfect square, otherwise, return the square root of N rounded down to the nearest integer . Input: N (Integer) . Output: R (Integer) . Constraints: Do not use any built-in math operations such as sqrt(x) or x**(0.5), Try complete the problem in logarithmic time. . Hint 1: Maybe you can use Binary Search to try and reduce the number of checks you have to perform? . Hint 2: Is there a mathematical pattern amongst numbers and their square roots that could help you reduce the number of searches or iterations you must execute? Is there some value or rule you can set before applying binary search to narrow the range of possible values? . Run the very last code segment below to load test cases and submission function . def binarySearch(N): low = 0 high = N while high &gt;= low: mid = (high + low) // 2 if mid * mid == N: return mid elif mid * mid &gt; N: high = mid - 1 else: low = mid + 1 return 0 from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid():0000000 for i in range(len(test_cases)): if binarySearch(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() # ignore def sqrt(N), this was just testing one method of finding the square root def sqrtTest(N): if (N % 2) == 0: index = 2 else: index = 1 divV = index result = 0 while (result != divV): result = N / divV if (divV == result): return result divV = divV + index return 0 r = sqrtTest(100) print( (r),&quot;(Ignore this, it&#39;s just the test method code that runs slower than my PC trying to open Genshin Impact :) )&quot;) def binsearchsqrt(N): if (N % 2) == 0: index = 2 else: index = 1 divV = index result = 0 while (result != divV): result = N / divV if (divV == result): return result divV = divV + index return 0 . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed 10.0 (Ignore this, it&#39;s just the test method code that runs slower than my PC trying to open Genshin Impact :) ) . from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid():0000000 for i in range(len(test_cases)): if binarySearch(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/06/searching-introduction.html",
            "relUrl": "/2022/12/06/searching-introduction.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Developing Algorithms (JavaScript)",
            "content": "Review . if-else statements . Syntax: . if (condition) { } else if (condition 2) { } else { } . for loops . for (let i = number; i &lt; number; i++) { // code } . Conditionals vs Booleans . Conditionals and booleans can be equivalent. . For example, let&#39;s say there are two booleans: rainy and sunny. . Let&#39;s look at the following code: . sunny = true; rainy = false; . if (sunny) { umbrella = false; } else if (rainy) { umbrella = true; } else { umbrella = false; } console.log(umbrella); . false . The code above is the same as below: . umbrella = !sunny &amp;&amp; rainy; console.log(umbrella); . false . To determine if two conditionals and booleans are the same, you can substitute the four possibilities that the two booleans (sunny and rainy) can be (listed below) into the conditional and boolean and see if both cases match: . sunny = true, rainy = true . sunny = true, rainy = false . sunny = false, rainy = true . sunny = false, rainy = false . Challenge . Using JavaScript, create an algorithm that takes in an IP address and a subnet mask and computes the network address. . Overview . As we&#39;ve seen in Unit 4.1, an IP address is a 32 bit number that uniquely identifies each device. (See this for a recap). Something extra is that an IP address also comes with a subnet mask. A subnet mask is also a 32 bit number that identifies what network an IP address in in through a process that uses the bitwise AND. . In ANDing: . 0 + 0 = 0 . 0 + 1 = 0 . 1 + 0 = 0 . 1 + 1 = 1 . The following are the steps to determine the network that an IP address is in given the subnet mask: . Example: IP address: 192.168.0.1 . Subnet mask: 255.255.255.0 . Convert the IP address into binary: 192.168.0.1 -&gt; 11000000.10101000.00000000.00000001 | Convert the subnet mask into binary: 255.255.255.0 -&gt; 11111111.11111111.11111111.00000000 | Do a bitwise AND operation on the binary IP address and subnet mask: | 11000000.10101000.00000000.00000001 +11111111.11111111.11111111.00000000 =11000000.10101000.00000000.00000000 . Convert the result back to decimal: 11000000.10101000.00000000.00000000 -&gt; 192.168.0.0 | The network address is 192.168.0.0 . // split string using javascript numbs = ip.split(&quot;.&quot;) then use decTobinary for each of the split string). // Might need to convert string to int. Check decTobinary .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/06/developing-algorithms-js.html",
            "relUrl": "/2022/12/06/developing-algorithms-js.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Developing Algorithms",
            "content": "Algorithms can be written in different ways and still accomplish the same tasks. Algorithms that look similar often yield differnet outputs. To solve the same problem, many different algorithms can be used. . Therefore, algorithms are very important for programmers, and today we&#39;re going to explore how to determine the outcome of algorithms, how to deteremine the output of similar algorithms, how to edit existing algorithms, and how to develop our own algorithms. . Determine the outcome of algorithms . Consider the following algorithm. . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . True . What does the algorithm do? Please explain in words. | What if I put in 30 as num and 4 as num2. What would be the output? | Determine the outcome of similar algorithms . What is the output of this algorithm? . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . What is the output of this algorithm? it looks similar but the output is different! . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) if (temp &gt;= 65): print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . Editing Algorithms . Task: Please edit the algorithm above to have it yield the same results as the previous algorithm! (no matter what temp you put in) . Developing Algorithms . To develop algorithms, we first need to understand what the question is asking. Then, think about how you would approach it as a human and then try to find what pattern you went through to arrive at the answer. Apply this to code, and there you have it! An algorithm! . Let&#39;s say you wanted to sum up the first five integers. How would you do this in real life? Your thought process would probably be: . The sum of the first integer is 1. | Then, increase that integer by 1. I now add 2 to my existing sum (1). My new sum is 3. | Repeat until I add 5 to my sum. The resulting sum is 15. | . Now let&#39;s translate this into code. . sum = 0 # start with a sum of 0 for i in range (1, 6): # you will repeat the process five times for integers 1-5 sum = sum + i # add the number to your sum print(sum) # print the result . 15 . Task: Write an algorithm in python that sums up the first 5 odd integers. You can use the following code as a starter. . sum = 0 counter = 0 # is counter max to use? so it can be whatever &gt; 9? for i in range (0, 10): if (i % 2 == 1): sum = sum + i counter = counter + 1 if (counter &gt;= 5): break print(sum) . 75 . Homework . Create an algorithm that will start with any positive integer n and display the full sequence of numbers that result from the Collatz Conjecture. The COllatz Conjecture is as follows: . start with any positive integer | if the number is even, divide by 2 | if the number is odd, multiply by 3 and add 1 | repeat steps 2 and 3 until you reach 1 | Example: if the starting number was 6, the output would be 6, 3, 10, 5, 16, 8, 4, 2, 1 . def calculateNumber(num): result = num if (num == 0): return [] result_list = [result] while result != 1: if (result % 2 == 0): # use mod = remander = 0 -&gt; even. 1 = odd result = result / 2 else: result = result * 3 + 1 result_list.append(int(result)) # appends the result to a string of results so it can be printed later return result_list # Input function s = &quot;&quot; while (s != &quot;q&quot;): print(&quot; nEnter a number or type &#39;q&#39; to quit.&quot;) s = input() try: if s != &quot;q&quot;: num = (int(s)) resultFinal = calculateNumber(num) print(resultFinal) except ValueError: print (&quot;Invalid input.&quot;) . Enter a number or type &#39;q&#39; to quit. [6, 3, 10, 5, 16, 8, 4, 2, 1] Enter a number or type &#39;q&#39; to quit. [100, 50, 25, 76, 38, 19, 58, 29, 88, 44, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1] Enter a number or type &#39;q&#39; to quit. [456, 228, 114, 57, 172, 86, 43, 130, 65, 196, 98, 49, 148, 74, 37, 112, 56, 28, 14, 7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1] Enter a number or type &#39;q&#39; to quit. .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/12/06/Developing-Algorithms.html",
            "relUrl": "/2022/12/06/Developing-Algorithms.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Lists and Iteration Homework",
            "content": "Overview and Notes: 3.10 - Lists . Make sure you complete the challenge in the challenges section while we present the lesson! | . Add your OWN Notes for 3.10 here: . i always represents the current index, so an extra index variable is not needed | indexes can be used to make lists of numbers | . Fill out the empty boxes: . Pseudocode Operation Python Syntax Description . aList[i] | aList[i] | Accesses the element of aList at index i | . x ← aList[i] | x = aList(i) | Assigns the element of aList at index i to a variable &#39;x&#39; | . aList[i] ← x | aList(i) = x | Assigns the value of a variable &#39;x&#39; to the element of a List at index i | . aList[i] ← aList[j] | aList[i] = aList[j] | Assigns value of aList[j] to aList[i] | . INSERT(aList, i, value) | aList.insert(i, value) | value is placed at index i in aList. Any element at an index greater than i will shiftone position to the right. | . APPEND(aList, value) | aList.append(value) | value is added as an element to the end of aList and length of aList is increased by 1 | . REMOVE(aList, i) | aList.pop(i)ORaList.remove(value) | Removes item at index i and any values at indices greater than i shift to the left. Length of aList decreased by 1. | . Overview and Notes: 3.8 - Iteration . Add your OWN Notes for 3.8 here: . For Loops - Loops that apply a certain algorithm or function to an entire list of similar things; iterates until told not to/until conditions are met (infinite) | Recursive Loops - Loops that run through the code until reaching a specific break point | While Loops - run until the end of the list (sometimes not in some cases) | . Sorry if there&#39;s not many notes most of it was just the chart :( . . Homework Assignment . Instead of us making a quiz for you to take, we would like YOU to make a quiz about the material we reviewed. . We would like you to input questions into a list, and use some sort of iterative system to print the questions, detect an input, and determine if you answered correctly. There should be at least five questions, each with at least three possible answers. . You may use the template below as a framework for this assignment. . import random questions_list = [ #questions go here (remember to make them strings!) &quot;What does a for loop do?&quot;, &quot;What is a while loop?&quot;, &quot;What is a recursive loop?&quot;, &quot;How can you append to a list?&quot;, &quot;Why would you use an index?&quot;, ] answers = [ [ &quot;A loop that iterates until the completion conditions are met&quot;, &quot;Loops that apply a certain algorithm or function to an entire list of similar things&quot;, &quot;Loops that apply a certain algorithm or function to a list until completion conditions are met&quot;], [ &quot;Loops that start with &#39;while&#39;&quot;, &quot;A loop that runs until the end of the list&quot;, &quot;A loop that runs until the end of the list most of the time&quot;], [ &quot;A loop that runs until the code reaches a breakpoint&quot;, &quot;A loop that runs infinitely until it is told to stop&quot;, &quot;A loop that has a limited starting point&quot;], [ &quot;aList.pop(i)&quot;, &quot;aList.remove(value)&quot;, &quot;aList.append(value)&quot;], [ &quot;To make a list of numbers&quot;, &quot;To make numbers on a list easier to organize&quot;, &quot;To categorize data&quot;], ] def questionloop(): s = &quot;&quot; while (s != &quot;q&quot;): question = random.choice(questions_list) print(question) s = input() print(s) answercheck(s, question) #make an iterative function to ask the questions #this can be any loop you want as long as it works! def answercheck(s, question): i = questions_list.index(question) matchedAnswers = list(filter(lambda item: item == s, answers[i])) # Filters wrong/right, if it&#39;s not in the list it&#39;s wrong, and that makes it appear as &#39;empty&#39; # (Tests, basically shows the len and if the len is &gt;1, the answer is correct) print(matchedAnswers , str(len(matchedAnswers))) if (len(matchedAnswers)) &gt;= 1: # if the length was marked as &#39;none&#39; (0) in the previous line, then it&#39;s measured (using len) and marked as incorrect print(&quot;Correct.&quot;) else: print(&quot;Incorrect.&quot;) #make a function to check if the answer was correct or not questionloop() . What is a recursive loop? A loop that runs until the code reaches a breakpoint Correct. What is a while loop? incorrect answer Incorrect. What does a for loop do? Loops that apply a certain algorithm or function to an entire list of similar things Correct. How can you append to a list? q Incorrect. . . Hacks . Here are some ideas of things you can do to make your program even cooler. Doing these will raise your grade if done correctly. . Add more than five questions with more than three answer choices | Randomize the order in which questions/answers are output | At the end, display the user&#39;s score and determine whether or not they passed | . Challenges . Important! You don&#39;t have to complete these challenges completely perfectly, but you will be marked down if you don&#39;t show evidence of at least having tried these challenges in the time we gave during the lesson. . 3.10 Challenge . Follow the instructions in the code comments. . grocery_list = [&#39;apples&#39;, &#39;milk&#39;, &#39;oranges&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;] # Print the fourth item in the list fourth = grocery_list[3] print(fourth) # Now, assign the fourth item in the list to a variable, x and then print the variable x = fourth print (x) # Add these two items at the end of the list : umbrellas and artichokes grocery_list.append(&#39;umbrellas&#39;) grocery_list.append(&#39;artichokes&#39;) # Insert the item eggs as the third item of the list grocery_list.insert(2, &#39;eggs&#39;) # Remove milk from the list grocery_list.remove(&#39;milk&#39;) # Assign the element at the end of the list to index 2. Print index 2 to check index_2 = grocery_list[6] print (index_2) # Print the entire list, does it match ours ? print (grocery_list) # Expected output # carrots # carrots # artichokes # [&#39;apples&#39;, &#39;eggs&#39;, &#39;artichokes&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . carrots carrots artichokes [&#39;apples&#39;, &#39;eggs&#39;, &#39;oranges&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . . 3.8 Challenge . Create a loop that converts 8-bit binary values from the provided list into decimal numbers. Then, after the value is determined, remove all the values greater than 100 from the list using a list-related function you&#39;ve been taught before. Print the new list when done. . Once you&#39;ve done this with one of the types of loops discussed in this lesson, create a function that does the same thing with a different type of loop. . binarylist = [ &quot;01001001&quot;, &quot;10101010&quot;, &quot;10010110&quot;, &quot;00110111&quot;, &quot;11101100&quot;, &quot;11010001&quot;, &quot;10000001&quot; ] def binary_convert(bin): dec, i = 0, 0 # starts at 0 for c in bin: # c = character, bin = numbers in binary list ci = int(c) # convert string to int dec = dec + ci * pow(2,i) # index times power of base 2 = 1 or 0 i += 1 # adds/increases position in the index return(dec) decList = [] for bin in binarylist: dec = binary_convert(bin) decList.append(dec) print (&quot;Binary to decimal conversion of the Binary List:&quot;, decList) filteredList = list(filter(lambda item: item &lt; 100, decList)) # filters list so that ONLY items under 100 appear print(&quot;All values less than 100:&quot;, filteredList) #use this function to convert every binary value in binarylist to decimal #afterward, get rid of the values that are greater than 100 in decimal #when done, print the results . Binary to decimal conversion of the Binary List: [146, 85, 105, 236, 55, 139, 129] All values less than 100: [85, 55] .",
            "url": "https://keiraokimoto.github.io/Fastpages/homework/",
            "relUrl": "/homework/",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Unit 3 Assignment Grades",
            "content": "Unit 3 Assignment Grades . Vocab for Unit 2 and 3 . Unit Number Due Date Grade Received Post Link . 3.1 - 3.2 | 12/2 | 0.8/1 | 3.1 - 3.2 Homework | . 3.3 - 3.4 | 12/2 | 0.8/1 | 3.3 - 3.4 Homework | . 3.5 - 3.7 | 12/7 | 1/1 | 3.5 - 3.7 Homework | . 3.8 + 3.10 | 12/7 | 0.95/1 | 3.8 + 3.10 Homework | . 3.9 + 3.11 | 12/15 | 0.87/1 | 3.9 + 3.11 Homework | . 3.12 + 3.13 | 12/15 | 0.8/1 | 3.12 + 3.13 Homework | . 3.14 + 3.15 | 12/15 | 0.88/1 | 3.4 + 3.15 Homework | . 3.16 | 12/15 | 0.97/1 | 3.16 Homework | . 3.17 - 3.18 | Taught this lesson | 12/16 | Grading | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/12/02/markdown-20.html",
            "relUrl": "/markdown%20posts/2022/12/02/markdown-20.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Homework",
            "content": ". Practice Problem . cookies = 5467; freeCookies = 5 if cookies &gt;= 10: print(&quot;Wow that&#39;s a lot of cookies.&quot;); else: print(&quot;. i&quot;); if freeCookies &gt;= 24: print(&quot;Surely you have to have extras. Can I have one?&quot;); else: print(&quot;froth froth froth froth froth froth froth&quot;); . Wow that&#39;s a lot of cookies. froth froth froth froth froth froth froth . Homework/Hacks . Our homework we have decided for a decimal number to binary converter. You must use conditional statements within your code and have a input box for where the decimal number will go. This will give you a 2.7 out of 3 and you may add anything else to the code to get above a 2.7. . Below is an example of decimal number to binary converter which you can use as a starting template. . def DecimalToBinary(num): strs = &quot;&quot; while num: # if (num &amp; 1) = 1 if (num &amp; 1): strs += &quot;1&quot; # if (num &amp; 1) = 0 else: strs += &quot;0&quot; # right shift by 1 num &gt;&gt;= 1 return strs # function to reverse the string def reverse(strs): return(strs[::-1]) def ReverseNumber(num): return reverse(DecimalToBinary(num)) # Driver Code s = &quot;&quot; while (s != &quot;q&quot;): print(&quot; nEnter a number or type &#39;q&#39; to quit.&quot;) s = input() try: if s != &quot;q&quot;: num = (int(s)) result = ReverseNumber(num) print(&quot;Binary of&quot;, (num), &quot;is:&quot;, (result)) print (&quot;The length of&quot;, (result) , &quot;is:&quot;, (str(len(result)))) if (len(result)) &gt;= 10: print (&quot;Stream Crazy:B「指先のアリアドネ」 あんさんぶるスターズ！！ Music ゲームサイズMV&quot;) else: print (&quot;Stream Crazy:B &amp; UNDEAD「U.S.A.」あんさんぶるスターズ！！ Music ゲームサイズMV&quot;) except ValueError: print (&quot;Invalid input.&quot;) # my additions to the code that i accidently deleted twice but it&#39;s ok i screenshotted # ignore how i only have like 1 commit I did this all on a python emulator because I didn&#39;t want to get my laptop . Enter a number or type &#39;q&#39; to quit. Binary of 23125 is: 101101001010101 The length of 101101001010101 is: 15 Stream Crazy:B「指先のアリアドネ」 あんさんぶるスターズ！！ Music ゲームサイズMV Enter a number or type &#39;q&#39; to quit. Binary of 4 is: 100 The length of 100 is: 3 Stream Crazy:B &amp; UNDEAD「U.S.A.」あんさんぶるスターズ！！ Music ゲームサイズMV Enter a number or type &#39;q&#39; to quit. Invalid input. Enter a number or type &#39;q&#39; to quit. . . Notes . Boolean - 2 options (ex: true/false, yes/no, 0/1) | Relational Operator - Operators that can work between any two values of the same type | Logical Operator - Operators that work on operands to produce a single boolean result (such as and or not) | Relational operators go first, then logical . | All programs have conditionals . | Conditionals drive selection; they dictate what happens in a program based on whether something is true or false | Usually lots of if/else statements | Algorithm - A set of instructions that accomplish a task | Selection - The process that determines which parts of an algoritm is being executed based on a condition that is true or false | If/else statements change based on what has occured before | Nested Conditionals are like conditionals within conditionals | (Ex: If condtion 1 is met, condition 2 will occur, and if condition 2 occurs, condition 3 can occur) | .",
            "url": "https://keiraokimoto.github.io/Fastpages/week%2013/2022/11/30/homework.html",
            "relUrl": "/week%2013/2022/11/30/homework.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Big idea 3!",
            "content": "3.3 Expressions(Show video 1 and 3) . Vocab: fill in the blanks . the symbol for exponent is ^ the symbol for addition is + the symbol for subtraction is - the symbol for multiplication is * the symbol for division is / the symbol for modulus is % an algorithm is a sequence of steps that accomplishes a specific task . Sequencing Practice: the code below does not follow the intended steps below. change the code so that it does so. . divide value1 by 10(value1 = 5) | multiply 2 from the result of the step 1 | subtract 4 from the result of the step 2 | print the result of step 3 | value1 = 5 value2 = value1/10; 1 #step 1 value3 = value2*2; 2 #step 2 value4 = value3-4; 6 #step 3 print(value4) . -3.0 . Selection/Iteration Practice: Create a function to print ONLY the numbers of numlist that are divisble by 3. Hint: use the MOD operator (a % b) to find the remainder when a is divided by b. . numlist = &quot;3&quot;,&quot;4&quot;,&quot;9&quot;,&quot;76&quot;,&quot;891&quot; for i in range(len(numlist)): xyz = int(numlist[i]) if xyz % 3 == 0: print( numlist[i] + &quot; is divisible by 3&quot;) continue else: continue . 3 is divisible by 3 9 is divisible by 3 891 is divisible by 3 . Homework/Binary Adaptation: Create a python function that will convert a decimal number 1-255 to binary using mathematical operations and powers of 2. Challenge: add frontend with javascript or html. . def convert(decNo): divValue = decNo remainder = 1 x = &#39;&#39; while divValue &gt; 0: remainder = divValue % 2 divValue = (int)(divValue / 2) x = str(remainder) + x print(x) convert(4) # 100 convert(255) # 11111111 convert(15) # 1111 convert(39) # 100111 convert(1000) #1111101000 convert (5456) #1010101010000 . 100 11111111 1111 100111 1111101000 1010101010000 . 3.4 Strings(Show video 1) . Vocab: fill in the blanks using the video . Index is a number representing a position, like a character&#39;s position in a string or a string&#39;s position in a list. Concatenation is when two strings are combined with each other. Length is the amount of items in a string. A substring is a part of a string. . What is psuedocode? . Pseudocode is writing out a program in plain language with keywords that are used to refer to common coding concepts. . Can you think of some benefits of using pseudocode prior to writing out the actual code? . Choose an everyday activity | Imagine that you are providing instructions for this activity to a person who has never done it before | Challenge someone to do the steps you wrote out | Ex. Brushing Teeth . Pick up your toothbrush | Rinse toothbrush | Pick up toothpaste | Place toothpaste on the toothbrush | Rinse toothbrush again | Brush teeth in a circular motion | Spit | Wash mouth | Rinse toothbrush | You have brushed your teeth! | Substring/Length Practice: change the print functions to print &quot;hello&quot;, &quot;bye&quot;, and the string length . #the substring will have the characters including the index &quot;start&quot; to the character BEFORE the index &quot;end&quot; #len(string) will print the length of string string = &quot;hellobye&quot; x = string[0:5] y = string[5:8] print(x) print(y) . hello bye . Concatenation Practice: combine string1 and string2 to make string3, then print string3. . string1 = &quot;computer&quot; string2 = &quot;science&quot; string3 = string1 + string2 print(string3) . computerscience . Homework/List Adaptation: create a function that prints the name of each string in the list and the string&#39;s length. Challenge: add frontend with javascript or html. . names = [&quot;Jaden&quot;,&quot;Max&quot;,&quot;Dylan&quot;,&quot;Orlando&quot;] def getStringLength(namelist): print(&#39;Name List Length = &#39;+ str(len(namelist))) for name in namelist: s = name + &#39; - &#39; + str(len(name)) + &#39; letters.&#39; print(s) getStringLength(names) . Name List Length = 4 Jaden - 5 letters. Max - 3 letters. Dylan - 5 letters. Orlando - 7 letters. . Stuck? . Check out what we did. | . Have any questions? . Ask us if you have any questions! | . . Unit 3.3 and 3.4 Notes . Not many notes here since most were on the document itself! | Will still be adding some notes here anyways, for convenience . | Length - the number of characters/item in a string . | Addition, subtraction, and division are all represented by their respective symbols | The only differences are multiplication and exponents (* and ^) | Concatenation (which I cannot spell) is essentially adding 2 strings together | Substrings are parts of strings | The length of a string is the amount of items or numbers in it | &#39;Str&#39; can be used to initialize something for printing | &#39;len&#39; tells the code to consider the entirety of the string&#39;s length | .",
            "url": "https://keiraokimoto.github.io/Fastpages/week-13/big-idea-3/2022/11/29/Unit-3.3-3.4-Homework.html",
            "relUrl": "/week-13/big-idea-3/2022/11/29/Unit-3.3-3.4-Homework.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 3.1 and 3.2",
            "content": ". title: Unit 3.1 and 3.2 Homework toc: true layout: post . categories: [post] . The list given contains multiple numbers with different values. There are also 2 variables that define the minimum and maximum valid values. Given these variables, output the values that do not fit into the valid range as well as their index values. . data = [104, 101, 4, 105, 308, 103, 5, 107, 100, 306, 106, 102, 108] # list of the different numerical values min_valid = 100 # minimum value max_valid = 200 # maximum value for i in range(len(data)): if data[i] &gt; max_valid: print(i, data[i]) elif data[i] &lt; min_valid: print(i, data[i]) . 2 4 4 308 6 5 9 306 . albums = [ (&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975, # First album list [ (1, &quot;Welcome to my Nightmare&quot;), (2, &quot;Devil&#39;s Food&quot;), (3, &quot;The Black Widow&quot;), (4, &quot;Some Folks&quot;), (5, &quot;Only Women Bleed&quot;), ] ), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974, # Second album list [ (1, &quot;Can&#39;t Get Enough&quot;), (2, &quot;Rock Steady&quot;), (3, &quot;Ready for Love&quot;), (4, &quot;Don&#39;t Let Me Down&quot;), (5, &quot;Bad Company&quot;), (6, &quot;The Way I Choose&quot;), (7, &quot;Movin&#39; On&quot;), (8, &quot;Seagull&quot;), ] ), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981, [ (1, &quot;I Turned to Stone&quot;), (2, &quot;Keeping a Rendezvous&quot;), (3, &quot;Reaper of the Glory&quot;), (4, &quot;She Used Me Up&quot;), ] ), (&quot;More Mayhem&quot;, &quot;Imelda May&quot;, 2011, [ (1, &quot;Pulling the Rug&quot;), (2, &quot;Psycho&quot;), (3, &quot;Mayhem&quot;), (4, &quot;Kentish Town Waltz&quot;), ] ), ] album = int(input(&quot;{Please select an album.&quot;)) song = int(input(&quot;Please select a song.&quot;)) print(&quot;Playing &quot;{0} &quot; from album &quot;{1} &quot;&quot;.format(albums[album-1][3][song-1][1],albums[album-1][0])) . Playing &#34;Don&#39;t Let Me Down&#34; from album &#34;Bad Company&#34; . .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/11/28/Unit-3.1-3.2-Homework.html",
            "relUrl": "/2022/11/28/Unit-3.1-3.2-Homework.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Character Octal Hexadecimal Decimal Minus . +1 | 00000000 | | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://keiraokimoto.github.io/Fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Introduction to Finance 1 Final Exam Study Guide",
            "content": "Introduction to Finance 1 Final Exam Study Guide . Net Income - The money a person has available after taxes and other deductions have been taken out of their paycheck . Gross Income - A person’s total income before taxes and other deductions . Balanced Budget - A budget in which the revenues and expenditures are equal (import/export are equal) . W-4 - A form that is filled by an employee to let employers know how much to withhold from the employee’s paycheck based on marital status, number of exemptions, and dependents . Checking Account - A liquid type of account with a bank or other financial institution that allows a person to deposit and withdraw money . Mutual Fund - An investment program funded by shareholders that has trades in diversified holdings and is managed professionally . Low Risk Investments: . Money market mutual fund - A fund where investments are made on short-term debt securities such as US treasury bills with the goal of creating a stable asset value through liquid investments | Treasury bond - A debt issued by the government to support government spending that pays back after a certain amount of time | Treasury note - A marketable US government debt security with a fixed interest rate and a maturity between 2 and 10 years | Treasury bill - A short-dated government security, yielding no interest but issued at a discount on its redemption price | Annuities - A fixed sum of money paid to someone each year, typically for the rest of their life or a form of insurance or investment entitling the investor to a series of annual sums | . Medium Risk Investments - Crowdfunded real estate, fundraising, dividend-paying stocks, corporate bonds, municipal bonds, preferred stocks are all medium risk investments . High Risk Investments - . Junk Bonds - bonds that carry a higher risk of default than most bonds issued by corporations and governments | Speculative Bonds - describes securities deemed to not be of investment quality by a credit rating agency | Penny Stocks - a common stock valued at less than one dollar, and therefore highly speculative | Rule of 72 - a simplified formula that calculates how long it’ll take for an investment to double in value, based on its rate of return (t = 72/r, t = number of periods required to double an investment’s value, r = interest rate per period, as a percentage) | . Depreciation - When something decreases in value over time . Appreciation - When something gains in value over time . Adjustable Rate Mortgage - an interest rate that may change periodically depending on changes in a corresponding financial index that’s associated with the loan . Fixed Rate Mortgage - an installment loan that has a fixed interest rate for the entire term of the loan . Amortization - a financial term that refers to your home loan pay off process . Dividend Income - a reward given to shareholders who have invested in a company’s equity, usually originating from the company’s net profits . Interest Income - Earnings generated by investments such as savings accounts and certificates of deposit . Benefits - a reduction in the cost of finance, including interest, finance charges, costs, fees and discounts on a redemption amount . Savings Account - a bank account that earns interest . Certificate of Deposit - a savings account that holds a fixed amount of money for a fixed period of time, such as six months, one year, or five years, and in exchange, the issuing bank pays interest . FDIC Insurance - a bank or thrift account that is covered or insured by the Federal Deposit Insurance Corporation (FDIC) . Simple Interest - the straightforward crediting of cash flows associated with some investment or deposit . Compound Interest - that the interest associated with a bank account, loan, or investment increases exponentially over time . Bond - a fixed-income instrument that represents a loan made by an investor to a borrower . Dividend - the distribution of a company’s earnings to its shareholders and is determined by the company’s board of directors . Index - a group or basket of securities, derivatives, or other financial instruments that represents and measures the performance of a specific market, asset class, market sector, or investment strategy . Market Price - the current price at which an asset or service can be bought or sold . Rate of return - the percentage change in the value of an investment . Credit limit - the maximum amount of money a lender will allow you to spend on a credit card or a line of credit . MSRP - the price that the manufacturer suggests that the dealer ask for the vehicle . Invoice Price - the initial price that the manufacturer charges the dealer . Down payment - an initial payment made when something is bought on credit. . Leasing - contract outlining the terms under which one party agrees to rent an asset owned by another party . Renters insurance - property insurance that provides coverage for a policyholder’s belongings, liabilities, and possibly living expenses in case of a loss event . Security deposit - money that is given to a landlord, lender, or seller of a home or apartment as proof of intent to move in and care for the domicile .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/11/10/markdown-19.html",
            "relUrl": "/markdown%20posts/2022/11/10/markdown-19.html",
            "date": " • Nov 10, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Statistics Unit II Vocabulary",
            "content": "Statistics Unit II Vocabulary . Population - An entire group of which information is being collected | Sample - A subset of the population which data is collected from | Sampling Frame - The actual set of units from which a sample has been drawn/a list of selected units in a set | Voluntary Response Sample - Response taken from subjects who volunteer their answers | Convenience Sample - A sample taken from the most easily accessible population | Bias - A skew towards a specific result due to favoritism or otherwise that would not typically be present in the data | Undercoverage - When some members of a population are misrepresented or not represented at all in a sample | Systemic Random Sample - A sample with a random starting point, with equal intervals to select more subjects | Simple Random Sample - When the sampling method ensures every individual/group is equally likely to be chosen for a sample | Stratified Random Sample - Meaningful groups created from a population, with a random sample taken from each group | Cluster Sample - Naturally occurring diverse groups where all the individuals in the selected groups are sampled | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/11/10/markdown-18.html",
            "relUrl": "/markdown%20posts/2022/11/10/markdown-18.html",
            "date": " • Nov 10, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Test Corrections 11/07",
            "content": "Test Corrections 11/07 . Question 1 . In this question, I answered C because I assumed the ‘*’ symbol was referring to putting the result to the power of 5, but the * symbol was actually meant to symbolize multiplication. That is why the answer would be D instead of C. . Question 2 . In this question, I selected B, which says that the code displays nothing if x is negative and false if otherwise. However, the answer would actually be C, because the code tells the variable x to display as nothing if the value of X is negative, because it has no code to tell the value to display as true or false. . Question 11 . For this question, I answered A because I assumed that the ‘repeat until’ command told the code that it needed to iterate through the entire list and compare each element to the others in the list. However, the answer is actually B, because it compares each element to the elements that follow it in the list. This is because it iterates through j/k + 1, which tells the code to do the element after the one that has just looped. . Question 24 . For this question, I answered C but the answer is actually A. This is because I miscalculated the binary and instead of binary 1101 being after 12, I put it before 12. Binary 1101 is supposed to be equivelent to 13, which comes after decimal 12. . Question 32 . In this question, you are supposed to change yourList into the string from myList after the code is run through, but I added both the lists together instead, so the answer would actually be A because this answer simply says that the result of yourList is the same as the data from myList. .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/11/07/markdown-17.html",
            "relUrl": "/post/2022/11/07/markdown-17.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Night at the Museum (11/3)",
            "content": "Night at the Museum 11/3 . When I went to Night at the Museum on Thursday, I saw a lot of projects from this class and a few others. One of the projects I saw from this class was from Noor and her group, where they used a search function that could use emotions (and synonyms of the provided emotion words) to provide a song that went with the given emotion. The program also featured an API that had each song on it, as well as a way for the user to vote for which emotion the song represented. The program would register the users’ votes for each song, for example, a Mitski song being voted as sad. The program would then take this information and match it to an emotion, so it would appear when that emotion was added in the search function. . I also went to one of my other classes, which is AP Studio Art, to look at the work from my friends in that class. There were no descriptions of the works, but they were displayed on the projecter for the class to see. The images there were progress shots of our works, and it was very interesting to see how the works progressed from bare minimum sketches to fully finished works. .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/11/04/markdown-16.html",
            "relUrl": "/post/2022/11/04/markdown-16.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "AP Classroom Completed Assignments (10/17)",
            "content": "AP Classroom Completed Assignments (10/17) . The AP Classroom Completed Assignments for this week. . 4.1 . Computers used to be very large, and take up full rooms because of how big they were | Computers got smaller as time progressed | Computers needed to connect to each other in order to work | Routers were created to help computers work faster and connect to each other | Routers also help information find its way from the sender to the receiver | Packets are small amounts of data sent over a network, which include data, source information, and destination information | Packets are sent by the sender and received by the receiver | Computer systems are groups of computers working together to achieve a common goal | Computer networks are a group of interconnected devices that send and receive data | Packet switching is when a message/file is broken up into packets and sent in any order, then reassembled by the receiving device | A path is the network between two computing devices, and is a sequence of directly connected computing devices | Bandwidth (measured in bits per second (BPS)) is the maximum amount of data that can be sent in a fixed amount of time on a computer network | . . 4.2 . OSI (Open Systems Interconnect) - The layers needed to go through to communicate (Application, Presentation, Session, Transport, Network, Data Link, Physical) | TCP (Transmission Control Protocol) - Establishes a common standard for how to send messages between devices on the internet (Application, Transport, Internet, Network Access) | There are many different protocols, standards, and etc. used in the Application/Transport levels, such as HTTP and DNS (OSI layers 3-7) | Internet Engineering Task Force (IETF) manages the development of internet standards via written technical discussions (Requests for Comments, RFC) in an open and collaborative process | Network Access Layer: Pulls the 1’s and 0’s from a wire or radio wave, focused on hardware and protocols that carry 1’s or 0’s | Each NIC has a unique address associated with it (Media Access Control (MAC) Address), used for local hops | . | Network Access/Internet Layer Data Transmission: A packet contains data that is being transmitted as well as metadata containing iniformation used for routing information | . | Internet Layer: Internet was designed to be scalable/able to change in size and scale to meet new demands | Local Area Network (LAN) physically connects, limited by hardware and physics, 1 to hundreds of systems | Intranet - LANs connected by routers within an organization, hundreds to thousands of systems | Autonomous Systems (AS) - Large intranets linked together under the control and policies of major organizations, tens of thousands of systems | The internet, millions of systems made of Autonomous Systems linked together | . | Transport Layer: TCP does error checking and error recovery, so it is slower | UDP performs error checking, but discards erroneous packets | Open standards and protocols enable different manufacturers and developers to build hardware/software that can communicate with the hardware/software on the rest of the internet | . | Internet/Transport Layers: Reliability - Reliability - Sender gets a receipt back, can be resended as needed | Transport Control Protocol (TCP) | Unreliability - Send and forget, User Datagram Protocol (UDP) | . | Purpose “Port” - Number assigned to an application or survice | 3 targets can be addressed using IP: Unicast - A specific device, internet wifde access; TCP is used | Multicast - A group of devices, it is specific range of IP addresses with internet wide access, UDP is used | Broadcast - All devices, LAN-wide, data stops at the router, and a UDP is used | . | . | Application Layer: Web servers - programs running on machines connected to the internet; provides web pages to clients, links to other pages using Uniform Resource Locations (URLs) | Domain Name Service (DNS) - Applications that translate a human readable url to an IP address, holds a database of mapping of names to IPs | . | Ethernet is the most popular way to access a network | .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/10/16/markdown-15.html",
            "relUrl": "/post/2022/10/16/markdown-15.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "AP Classroom Completed Assignments",
            "content": "AP Classroom Completed Assignments . The AP Classroom Completed Assignments for this week. Can’t open the assignment because it hasn’t been graded, but here is the proof that it is completed. .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-14.html",
            "relUrl": "/post/2022/10/09/markdown-14.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "College Board Program Design",
            "content": "College Board Program Design . Program Purpose and Function . Our program’s purpose is to provide vocabulary for math (AP Calc and AP Statistics), as well as physics, and provide quizzes to test skills. | The program’s function will be to use dictionaries, inputs, and outputs, to show information. | . Data Abstraction . Dictionaries can be used to store data; data can be backlogged using a ‘console.log’ command (or something similar). | Lists/dictionaries can also be used for search functions (ie; if ‘Statistics’ is searched, a list of words related to ‘Statistics’ will be run, and those items will appear. | . Managing Complexity . Multiple lists can be used to map data, and dictionaries can be used to map certain data to lists | Ex: If a term for the name of a list is searched, it can bring up those terms, and when a term is clicked, a dictionary can direct to different links. | . Procedural Abstraction . We will have a function to administer our quiz that references to a dictionary for the questions and answers, and has a score tracker that when the quiz is finished, outputs different phrases according to how well they did. | We are also considering a functionality in which it will take the type of answers failed and relate it to either outside resources for it or something in our program | . Algorithm Implementation . An algorithm we will have will first ask someone for their current math/science class, then look through dictionary to see the level it would be at in high school (eg. integraded 1a: low, pre-cal: mid, ap calc: high), if the class they state is not given the program will ask if they are taking something outside of school or if they misspelled, then give a chance to clarify. If they are taking something outside of school the program will tell them to try and relate it to one of or school’s courses through provided internet materials. After figuring out their class, our program will ask how much they are struggling, and show a correlated amount of related material to support them. | . Testing . We will institute a reward for quizzes, which will test if there are high scores in the quizzes that the user took, which were stored in a dictionary made, and if there are enough decently high scores they will be redirected to a page that either has a game or links to something enjoyable. | .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-13.html",
            "relUrl": "/post/2022/10/09/markdown-13.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Python RapidAPI",
            "content": "&quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;e819277188msh68a6f7af77fad4dp172d06jsnc2bc1f8ab152&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . import requests import json url = &quot;https://shazam.p.rapidapi.com/search&quot; querystring = {&quot;term&quot;:&quot;kiss the rain&quot;,&quot;locale&quot;:&quot;en-US&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;limit&quot;:&quot;5&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;e819277188msh68a6f7af77fad4dp172d06jsnc2bc1f8ab152&quot;, &quot;X-RapidAPI-Host&quot;: &quot;shazam.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) # print(response.text) print(&quot;Track_Name&quot;) tracks = response.json().get(&#39;tracks&#39;) hits = tracks.get(&#39;hits&#39;) for track in hits: if track [&quot;track&quot;][&#39;key&#39;] == &#39;40099833&#39;: json_formatted_str = json.dumps(track [&quot;track&quot;], indent=4) print (json_formatted_str) . Track_Name { &#34;layout&#34;: &#34;5&#34;, &#34;type&#34;: &#34;MUSIC&#34;, &#34;key&#34;: &#34;40099833&#34;, &#34;title&#34;: &#34;Kiss The Rain&#34;, &#34;subtitle&#34;: &#34;Yiruma&#34;, &#34;share&#34;: { &#34;subject&#34;: &#34;Kiss The Rain - Yiruma&#34;, &#34;text&#34;: &#34;I used Shazam to discover Kiss The Rain by Yiruma.&#34;, &#34;href&#34;: &#34;https://www.shazam.com/track/40099833/kiss-the-rain&#34;, &#34;image&#34;: &#34;https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/0a/d1/e8/0ad1e89c-df29-a43e-9852-eb6ece2dd556/21UMGIM24785.rgb.jpg/400x400cc.jpg&#34;, &#34;twitter&#34;: &#34;I used @Shazam to discover Kiss The Rain by Yiruma.&#34;, &#34;html&#34;: &#34;https://www.shazam.com/snippets/email-share/40099833?lang=en-US&amp;country=US&#34;, &#34;avatar&#34;: &#34;https://is4-ssl.mzstatic.com/image/thumb/Features115/v4/3f/84/4e/3f844e97-8c23-b64d-87f1-d536e99f80e9/mzl.rsxdpqqq.jpg/800x800cc.jpg&#34;, &#34;snapchat&#34;: &#34;https://www.shazam.com/partner/sc/track/40099833&#34; }, &#34;images&#34;: { &#34;background&#34;: &#34;https://is4-ssl.mzstatic.com/image/thumb/Features115/v4/3f/84/4e/3f844e97-8c23-b64d-87f1-d536e99f80e9/mzl.rsxdpqqq.jpg/800x800cc.jpg&#34;, &#34;coverart&#34;: &#34;https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/0a/d1/e8/0ad1e89c-df29-a43e-9852-eb6ece2dd556/21UMGIM24785.rgb.jpg/400x400cc.jpg&#34;, &#34;coverarthq&#34;: &#34;https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/0a/d1/e8/0ad1e89c-df29-a43e-9852-eb6ece2dd556/21UMGIM24785.rgb.jpg/400x400cc.jpg&#34;, &#34;joecolor&#34;: &#34;b:0f1513p:f6f1ees:d7d6d1t:c7c5c2q:afafab&#34; }, &#34;hub&#34;: { &#34;type&#34;: &#34;APPLEMUSIC&#34;, &#34;image&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/applemusic_{scalefactor}.png&#34;, &#34;actions&#34;: [ { &#34;name&#34;: &#34;apple&#34;, &#34;type&#34;: &#34;applemusicplay&#34;, &#34;id&#34;: &#34;1576663126&#34; }, { &#34;name&#34;: &#34;apple&#34;, &#34;type&#34;: &#34;uri&#34;, &#34;uri&#34;: &#34;https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview112/v4/b5/71/fd/b571fdea-62b9-64e8-1531-3d845cf6ee58/mzaf_8999534599011571502.plus.aac.ep.m4a&#34; } ], &#34;options&#34;: [ { &#34;caption&#34;: &#34;OPEN&#34;, &#34;actions&#34;: [ { &#34;name&#34;: &#34;hub:applemusic:deeplink&#34;, &#34;type&#34;: &#34;applemusicopen&#34;, &#34;uri&#34;: &#34;https://music.apple.com/us/album/kiss-the-rain/1576662868?i=1576663126&amp;mttnagencyid=s2n&amp;mttnsiteid=125115&amp;mttn3pid=Apple-Shazam&amp;mttnsub1=Shazam_ios&amp;mttnsub2=5348615A-616D-3235-3830-44754D6D5973&amp;itscg=30201&amp;app=music&amp;itsct=Shazam_ios&#34; }, { &#34;name&#34;: &#34;hub:applemusic:deeplink&#34;, &#34;type&#34;: &#34;uri&#34;, &#34;uri&#34;: &#34;https://music.apple.com/us/album/kiss-the-rain/1576662868?i=1576663126&amp;mttnagencyid=s2n&amp;mttnsiteid=125115&amp;mttn3pid=Apple-Shazam&amp;mttnsub1=Shazam_ios&amp;mttnsub2=5348615A-616D-3235-3830-44754D6D5973&amp;itscg=30201&amp;app=music&amp;itsct=Shazam_ios&#34; } ], &#34;beacondata&#34;: { &#34;type&#34;: &#34;open&#34;, &#34;providername&#34;: &#34;applemusic&#34; }, &#34;image&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/overflow-open-option_{scalefactor}.png&#34;, &#34;type&#34;: &#34;open&#34;, &#34;listcaption&#34;: &#34;Open in Apple Music&#34;, &#34;overflowimage&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/applemusic-overflow_{scalefactor}.png&#34;, &#34;colouroverflowimage&#34;: false, &#34;providername&#34;: &#34;applemusic&#34; }, { &#34;caption&#34;: &#34;BUY&#34;, &#34;actions&#34;: [ { &#34;type&#34;: &#34;uri&#34;, &#34;uri&#34;: &#34;https://itunes.apple.com/us/album/kiss-the-rain/1576662868?i=1576663126&amp;mttnagencyid=s2n&amp;mttnsiteid=125115&amp;mttn3pid=Apple-Shazam&amp;mttnsub1=Shazam_ios&amp;mttnsub2=5348615A-616D-3235-3830-44754D6D5973&amp;itscg=30201&amp;app=itunes&amp;itsct=Shazam_ios&#34; } ], &#34;beacondata&#34;: { &#34;type&#34;: &#34;buy&#34;, &#34;providername&#34;: &#34;itunes&#34; }, &#34;image&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/itunes-overflow-buy_{scalefactor}.png&#34;, &#34;type&#34;: &#34;buy&#34;, &#34;listcaption&#34;: &#34;Buy on iTunes&#34;, &#34;overflowimage&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/itunes-overflow-buy_{scalefactor}.png&#34;, &#34;colouroverflowimage&#34;: false, &#34;providername&#34;: &#34;itunes&#34; } ], &#34;providers&#34;: [ { &#34;caption&#34;: &#34;Open in Spotify&#34;, &#34;images&#34;: { &#34;overflow&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/spotify-overflow_{scalefactor}.png&#34;, &#34;default&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/spotify_{scalefactor}.png&#34; }, &#34;actions&#34;: [ { &#34;name&#34;: &#34;hub:spotify:searchdeeplink&#34;, &#34;type&#34;: &#34;uri&#34;, &#34;uri&#34;: &#34;spotify:search:Kiss%20The%20Rain%20Yiruma&#34; } ], &#34;type&#34;: &#34;SPOTIFY&#34; }, { &#34;caption&#34;: &#34;Open in Deezer&#34;, &#34;images&#34;: { &#34;overflow&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/deezer-overflow_{scalefactor}.png&#34;, &#34;default&#34;: &#34;https://images.shazam.com/static/icons/hub/ios/v5/deezer_{scalefactor}.png&#34; }, &#34;actions&#34;: [ { &#34;name&#34;: &#34;hub:deezer:searchdeeplink&#34;, &#34;type&#34;: &#34;uri&#34;, &#34;uri&#34;: &#34;deezer-query://www.deezer.com/play?query=%7Btrack%3A%27Kiss+The+Rain%27%20artist%3A%27Yiruma%27%7D&#34; } ], &#34;type&#34;: &#34;DEEZER&#34; } ], &#34;explicit&#34;: false, &#34;displayname&#34;: &#34;APPLE MUSIC&#34; }, &#34;artists&#34;: [ { &#34;id&#34;: &#34;42&#34;, &#34;adamid&#34;: &#34;73406786&#34; } ], &#34;url&#34;: &#34;https://www.shazam.com/track/40099833/kiss-the-rain&#34; } .",
            "url": "https://keiraokimoto.github.io/Fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter b is the 1 letter in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter t is the 0 letter in the alphabet . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 3 == 0): odds.append(numbers[i]) print(odds) . [0, 3, 6, 9] . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 0, 2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . from dataclasses import FrozenInstanceError from logging.handlers import BufferingHandler menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; n front of it? #ideally the code should prompt the user multiple times print(&quot;Please select an item from the menu.&quot;) def menuloop(): total = 0 choice = &#39;&#39; while choice != &#39;done&#39;: choice = input(&#39;Please select an item from the menu.&#39;) if choice != &#39;done&#39;: if choice in menu : print(&#39;Selected:&#39;, choice , &#39;. Price:&#39;, menu[choice]) total += menu [choice] else: print (&#39;This item does not exist. Please select another item.&#39;) return total total = menuloop() print(total) . Menu burger $3.99 fries $1.99 drink $0.99 Please select an item from the menu. Selected: burger . Price: 3.99 This item does not exist. Please select another item. Selected: fries . Price: 1.99 Selected: drink . Price: 0.99 Selected: drink . Price: 0.99 7.960000000000001 .",
            "url": "https://keiraokimoto.github.io/Fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "AP Prep Questions",
            "content": "AP Prep Questions . . I got most of the questions correct, except for the fourth and fifth questions on 1.2. . . For question 4, I selected C, but the answer was supposed to be B. This is because the information about which restaurants Brandon and Cynthia visited would not be needed to calculate a restaurant, only allergies and dietary restrictions. . . For question 5, I selected C, but the answer was supposed to be B. This is because the list compares each element to the all elements following it, not just one element immediately following the previous element. .",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/10/02/markdown-12.html",
            "relUrl": "/post/2022/10/02/markdown-12.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "HTML Bootstraps Table",
            "content": "Javascript Tutorial Table Link . &lt;!doctype html&gt; . Insert title here . Insert title here . . Bread Cheese Milk Sourdough Parmasan Rice Wheat Chedder Almond Potato Swiss Coconut",
            "url": "https://keiraokimoto.github.io/Fastpages/post/2022/09/26/markdown-11.html",
            "relUrl": "/post/2022/09/26/markdown-11.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Groupwork",
            "content": "Scrum Team Roles and Project . Our Scrum team is made up of Ellie, Zeen, Keira, and Giannina. . Roles . Frontend: Ellie | Backend: Giannina | Scrum Master: Keira | DevOps: Zeen | . Project . Our project is a website largely focused on helping students with school activities with a side of sports. This is to help people who were struggling in the same position as us and make their lives the tiniest bit easier. . Sprint . First we will set up our website for the first two or so days, allowing Ellie to set up the CSS and other base background stuff. This will take us around 3 days through our usual schedule. Afterwards we will work on our volleyball section, probably taking the rest of our 7 days, first laying out the text of volleyball terms and strategies, and then adding in the visual element. If we finish early on this, we will start on the math section’s definition and terms section. .",
            "url": "https://keiraokimoto.github.io/Fastpages/group/2022/09/26/markdown-10.html",
            "relUrl": "/group/2022/09/26/markdown-10.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "HTML Table",
            "content": "Javascript Tutorial Table Link . &lt;!doctype html&gt; . Insert title here . Insert title here . . Bread Cheese Milk Sourdough Parmasan Rice Wheat Chedder Almond Potato Swiss Coconut",
            "url": "https://keiraokimoto.github.io/Fastpages/techtalk/HTML_Table",
            "relUrl": "/techtalk/HTML_Table",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Team Project Plan",
            "content": "Team Project Plan . This is the plan for our team project. .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/25/markdown-9.html",
            "relUrl": "/markdown%20posts/2022/09/25/markdown-9.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "JavaScript Tutorial",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . . console.log output . Output to console using the classic programming introduction using a &quot;Hello, World!&quot; message. . The command or function is console.log() | &quot;Hello, World&quot; is a String literal. This is the referred to as Static text, as it does not change. | &quot;Hello, World&quot; is a parameter to the console.log command. | The console.log command outputs the parameter to the console, so you can see it in this Jupyter document. | Note, in a Web Application, console.log is used for debugging and is not visible from the browser via HTML. It is used behind the scenes, when using Inspect-&gt;Console from the browser. | . console.log(&quot;Hello, World!&quot;); . Hello, World! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console | . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are two steps in the code, the definition of the function and the call to the function. &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. | &quot;logIt(msg)&quot; is the call to the function, this actually activates the function. If you remove this line you will not receive any output to console. | . | Since the variable &quot;msg&quot; was defined in previous cell, it is used a parameter when calling the logMessage function. | . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. The variable type is determined at runtime. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Class object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data, the &quot;function Person&quot; allows programmer to retain name, github id, and class of designation. | Definition of a prototype allow for the definition of a method associated with the function , the &quot;Person.prototype.toJSON&quot; allows the collection of data to be expressed in a json/string versus JavaScript object. | Instance of a function, the &quot;var leader = new Person(&quot;Eichi Tenshouin&quot;, &quot;jm1021&quot;, 1977)&quot; line makes a variable &quot;leader&quot; which is an object representation of &quot;function Person&quot;. | . // define a function to hold data for a Person function Person(name, age, year, unit) { this.name = name; this.age = age; this.year = year; this.unit = unit; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, year: this.year, unit: this.unit, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable leader var leader = new Person(&quot;Eichi Tenshouin&quot;, &quot;19&quot;, &quot;Graduated&quot;, &quot;fine&quot;); leader.setRole(&quot;Leader&quot;); // output of Object and JSON/string associated with Leader logItType(leader); // object type is easy to work with in JavaScript logItType(leader.toJSON()); // json/string is useful when passing data on internet . object ; Person { name: &#39;Eichi Tenshouin&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;fine&#39;, role: &#39;Leader&#39; } string ; {&#34;name&#34;:&#34;Eichi Tenshouin&#34;,&#34;age&#34;:&#34;19&#34;,&#34;year&#34;:&#34;Graduated&#34;,&#34;unit&#34;:&#34;fine&#34;,&#34;role&#34;:&#34;Leader&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var members&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a member Array of Person(s) var members = [ new Person(&quot;Wataru Hibiki&quot;, &quot;19&quot;, &quot;Graduated&quot;, &quot;fine&quot;), new Person(&quot;Kaoru Hakaze&quot;, &quot;19&quot;, &quot;Graduated&quot;, &quot;UNDEAD&quot;), new Person(&quot;Midori Takamine&quot;, &quot;17&quot;, &quot;Third Year&quot;, &quot;Ryuseitai&quot;), new Person(&quot;Niki Shiina&quot;, &quot;19&quot;, &quot;Dropped Out&quot;, &quot;Crazy:B&quot;), new Person(&quot;Tsukasa Suou&quot;, &quot;17&quot;, &quot;Second Year&quot;, &quot;Knights&quot;), new Person(&quot;Tsumugi Aoba&quot;, &quot;19&quot;, &quot;Graduated&quot;, &quot;Switch&quot;) ]; // define a classroom and build Classroom objects and json function Classroom(leader, members){ // 1 leader, many member // start Classroom with Leader leader.setRole(&quot;Leader&quot;); this.leader = leader; this.classroom = [leader]; // add each Member to Classroom this.members = members; this.members.forEach(member =&gt; { member.setRole(&quot;Member&quot;); this.classroom.push(member); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined leader and members compsci = new Classroom(leader, members); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Eichi Tenshouin&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;fine&#39;, role: &#39;Leader&#39; }, Person { name: &#39;Wataru Hibiki&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;fine&#39;, role: &#39;Member&#39; }, Person { name: &#39;Kaoru Hakaze&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;UNDEAD&#39;, role: &#39;Member&#39; }, Person { name: &#39;Midori Takamine&#39;, age: &#39;17&#39;, year: &#39;Third Year&#39;, unit: &#39;Ryuseitai&#39;, role: &#39;Member&#39; }, Person { name: &#39;Niki Shiina&#39;, age: &#39;19&#39;, year: &#39;Dropped Out&#39;, unit: &#39;Crazy:B&#39;, role: &#39;Member&#39; }, Person { name: &#39;Tsukasa Suou&#39;, age: &#39;17&#39;, year: &#39;Second Year&#39;, unit: &#39;Knights&#39;, role: &#39;Member&#39; }, Person { name: &#39;Tsumugi Aoba&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;Switch&#39;, role: &#39;Member&#39; } ] string ; Eichi Tenshouin string ; {&#34;name&#34;:&#34;Eichi Tenshouin&#34;,&#34;age&#34;:&#34;19&#34;,&#34;year&#34;:&#34;Graduated&#34;,&#34;unit&#34;:&#34;fine&#34;,&#34;role&#34;:&#34;Leader&#34;} object ; { name: &#39;Eichi Tenshouin&#39;, age: &#39;19&#39;, year: &#39;Graduated&#39;, unit: &#39;fine&#39;, role: &#39;Leader&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render | . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Year&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Unit&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.year + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.unit + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeYearUnitRole . Eichi Tenshouin | 19 | Graduated | fine | Leader | Wataru Hibiki | 19 | Graduated | fine | Member | Kaoru Hakaze | 19 | Graduated | UNDEAD | Member | Midori Takamine | 17 | Third Year | Ryuseitai | Member | Niki Shiina | 19 | Dropped Out | Crazy:B | Member | Tsukasa Suou | 17 | Second Year | Knights | Member | Tsumugi Aoba | 19 | Graduated | Switch | Member | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . .",
            "url": "https://keiraokimoto.github.io/Fastpages/techtalk/javascript",
            "relUrl": "/techtalk/javascript",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Fastpages Blog Post",
            "content": "Fastpages Blog Post . Collab Work + Collab Quiz . . As the video explained, happiness comes from living in the moment, rather than in the past or the future, and because of this I am going to start doing daily things that make me happy, even if it takes a lot of effort. . What I want to try doing: . I’ll try to spend more time with friends and making connections among people, as well as joining communities. | I’ll always remind the people I love of how much I appreciate them, and foster my relationships and community, and I’ll stop carrying about money that brings me food. | I’ll focus on the present moment and what I can do now, all the possibiliies and the actions I can make right now to make me happy and live a more fulfilling life, and I won’t focus specifically on the future, only what’s in the present. | I’ll spend more time resting, so I’m able to have a clearer mind as well | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/18/markdown-7.html",
            "relUrl": "/markdown%20posts/2022/09/18/markdown-7.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Planning For the Performance Task",
            "content": "Performance Task Planning . Main Concept: . Website will be mostly school based | There will be a Math, Physics, Volleyball, and Gacha section | . For Math Section: . Will have AP Calculus as well as AP Statistics | Calculators, both for equations as well as normal calculations | Will have definitions as well as equations | For quizzes, there will be some for both AP Statistics and AP Calculus Both will have the page format: Start -&gt; Question -&gt; Incorrect page with how to solve/Correct page -&gt; Repeats until last page | . | . For Physics Section: . Very similar to the Math Section, but with Physics | Calculators for physics equations will be included, as well as definitions/terms | Will also have quizzes with the same format | . For Volleyball Section . Mostly volleyball terms, strategies, and etc. | Will also have images explaining terms/strategies | . For Gacha Section . Essentially a gacha calculator that gives random character pulls at a precent chance (likely using a print function) | Mostly just a ‘For fun’ section, may or may not get to this but it would be fun to include | . Requirements . Knowledge of math | Knowledge of python math functions | Knowledge on quizzes | Knowledge of liquid for automation of certain portions | Probably other things as we flesh out the concept (will be decided later) | . Current Ability . At this point in time, we can already do the design and quiz portions, however the calculator for the math section and the gacha section will require us to learn more aspects of Python and Liquid There are probably other minute details we haven’t noticed that we don’t know how to do yet | . Resources . We have Github, Google, VSCode, Youtube, Khan Academy, and the APCSP homepage to support us | . The reasoning we have for our website is that the math and science sections will support us in our studying and school lives, and hopefully help others students struggling in school by providing them with resources and learning materials. Volleyball stats will help us explore our interests while expanding our knowledge on computer science and its possibilities in many fields, and the gacha sections will help us learn more on probability and output for the end user, as well as being something fun to do. to encourage us. .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/11/markdown-6.html",
            "relUrl": "/markdown%20posts/2022/09/11/markdown-6.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Planning for Applab Quiz",
            "content": "Planning for Applab Quiz . . AppLab Code Plan . Page Order: | Start | Question 1 | If correct -&gt; Correct page | If incorrect -&gt; Incorrect page | For both incorrect and correct pages: click continue, continues to next question (repeat until all questions are finished) | Endpage . | Dictionaries are added for storing keys/values, keys being the questions/page names and the values being the correct answers | Dictionaries are added into functions, which change depending on the question (ie: Question1 will have the ‘correct’ value as ‘button3’, whereas Question2 will have the ‘correct’ value as ‘ans1’) | A wrong answer will direct to the incorrect_page, which is the same page for every incorrect | The same goes for correct answers, a correct answer will direct to the correct_page | Both the incorrect and correct pages have a ‘Continue’ button, which will change to the next question (question1, then question2, then question3, and the endpage) | . Successes/Discoveries . I was able to get the code to work using many dictionaries, lists, events, and other commands | Buttons, correct answers, and incorrect answers were all assigned using dictionaries | Dictionaries + keys + values tell the program which code belongs to which | Dictionaries + functions work as commands, which the program uses to determine which page to move to | “Question(number)” : (value) -&gt; The number of events/button clicks that can take place; used later in the code, which the code uses to move to a different page | Essentially, dictionaries and lists can be used with loops to move to different pages | . Challenges . Could not finish the dictionaries for the incorrect/correct pages | Each page has an ‘onEvent’ command which sends it to the next page | Could add a dictionary + loop for the ‘incorrect/correct’ pages that changes, and sends to a different question after being clicked | . Applab AP Stats Quiz . Applab AP Stats Quiz .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/11/markdown-5.html",
            "relUrl": "/markdown%20posts/2022/09/11/markdown-5.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Theme Changing Bugs",
            "content": "Theme Changing Bugs . . Bugs . Tags disappeared | Home button disappeared | Tables lack columns | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/05/markdown-4.html",
            "relUrl": "/markdown%20posts/2022/09/05/markdown-4.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Time Box Fragments",
            "content": ". Time Box Fragments . Week Date Links Description . Week 0 | August 21, 2022 | Review Ticket 0 | First week, mostly just setup. | . Week 1 | August 28, 2022 | Review Ticket 1 | Second week, personalizing pages and adding more features, such as a quiz and other tabs. | . Week 2 | September 05, 2022 | Review Ticket 2 | Third week, modifying lists and dictionaries, as well as modifying the theme. | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/09/05/markdown-3.html",
            "relUrl": "/markdown%20posts/2022/09/05/markdown-3.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # variable of type string name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 18 print(&quot;age&quot;, age, type(age)) # variable of type float score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name John Doe &lt;class &#39;str&#39;&gt; age 18 &lt;class &#39;int&#39;&gt; score 90.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; - langs[3] Bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;John Doe&#39;, &#39;age&#39;: 18, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] John Doe &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Keira&quot;, &quot;LastName&quot;: &quot;Okimoto&quot;, &quot;DOB&quot;: &quot;December 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;keiraokimoto@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;None&quot;], &quot;Owns_Cheese&quot;: &quot;None&quot;, &quot;Hobbies&quot;: [&quot;Swimming&quot;, &quot;Drawing&quot;, &quot;Playing games&quot;, &quot;Sleeping&quot;], }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;George&quot;, &quot;LastName&quot;: &quot;Washington&quot;, &quot;DOB&quot;: &quot;May 12&quot;, &quot;Residence&quot;: &quot;Some cemetary somewhere&quot;, &quot;Email&quot;: &quot;georgewashington@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;None&quot;], &quot;Owns_Cheese&quot;: &quot;Parmasan&quot;, &quot;Hobbies&quot;: [&quot;Swimming&quot;, &quot;Horseback riding&quot;, &quot;Hunting&quot;], }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Keira&#39;, &#39;LastName&#39;: &#39;Okimoto&#39;, &#39;DOB&#39;: &#39;December 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;keiraokimoto@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;None&#39;], &#39;Owns_Cheese&#39;: &#39;None&#39;, &#39;Hobbies&#39;: [&#39;Swimming&#39;, &#39;Drawing&#39;, &#39;Playing games&#39;, &#39;Sleeping&#39;]}, {&#39;FirstName&#39;: &#39;George&#39;, &#39;LastName&#39;: &#39;Washington&#39;, &#39;DOB&#39;: &#39;May 12&#39;, &#39;Residence&#39;: &#39;Some cemetary somewhere&#39;, &#39;Email&#39;: &#39;georgewashington@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;None&#39;], &#39;Owns_Cheese&#39;: &#39;Parmasan&#39;, &#39;Hobbies&#39;: [&#39;Swimming&#39;, &#39;Horseback riding&#39;, &#39;Hunting&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print(&quot; t&quot;, &quot;Cheese: &quot;, d_rec[&quot;Owns_Cheese&quot;]) print(&quot; t&quot;, &quot;Hobbies:&quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Keira Okimoto Residence: San Diego Birth Day: December 21 Cars: None Cheese: None Hobbies:Swimming, Drawing, Playing games, Sleeping George Washington Residence: Some cemetary somewhere Birth Day: May 12 Cars: None Cheese: Parmasan Hobbies:Swimming, Horseback riding, Hunting . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Keira Okimoto Residence: San Diego Birth Day: December 21 Cars: None Cheese: None Hobbies:Swimming, Drawing, Playing games, Sleeping George Washington Residence: Some cemetary somewhere Birth Day: May 12 Cars: None Cheese: Parmasan Hobbies:Swimming, Horseback riding, Hunting . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Keira Okimoto Residence: San Diego Birth Day: December 21 Cars: None Cheese: None Hobbies:Swimming, Drawing, Playing games, Sleeping George Washington Residence: Some cemetary somewhere Birth Day: May 12 Cars: None Cheese: Parmasan Hobbies:Swimming, Horseback riding, Hunting . . List Loops . Yeet variable is a list of strings, storing random words. The while loop is used to iterate through the list. Each item in the list is printed in the order added. The index is started at 0 and increment by 1 for each time. . yeet = [&quot;woo&quot;, &quot;wee&quot;, &quot;hee&quot;, &quot;hoo&quot;, &quot;yee&quot;, &quot;yoo&quot;] # while loop contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(yeet): print(yeet[i]) i += 1 return while_loop() . While loop output woo wee hee hoo yee yoo . For Loop for Lists . For a For Loop, the name of the list is defined and placed into the code. It is defined as d_yeet. . def print_data(d_yeet): print(d_yeet) def for_loop(): print(&quot;For loop output n&quot;) for record in yeet: print_data(record) for_loop() # Prints data in the d_yeet list . For loop output woo wee hee hoo yee yoo . Reverse Loop for Lists . For the reversed list, the code is defined the same as the original loop, but the reverse command is added to reverse the list. . yeet = [&quot;woo&quot;, &quot;wee&quot;, &quot;hee&quot;, &quot;hoo&quot;, &quot;yee&quot;, &quot;yoo&quot;] #yeet is the variable and it is equal to the string def print_data(d_yeet): print(d_yeet) #&#39;d_yeet&#39; is used to replace the name &#39;yeet&#39; as a definition def reverse_for_loop(): print (&quot;Reverse for loop using reversed n&quot;) for record in reversed(yeet): print_data(record) reverse_for_loop() #reversed command reverses the list def reverse_for_loop_2(): print (&quot;Reverse for loop using range n&quot;) for index in range(len(yeet) -1, -1, -1): print_data(yeet[index ]) reverse_for_loop_2() #reversing the data using a range - &#39;len&#39; = the length. -1 subtracts from the list/makes it reverse . Reverse for loop using reversed yoo yee hoo hee wee woo Reverse for loop using range yoo yee hoo hee wee woo . Recursive Loop for Lists . For a recursive loop with a list, the list name is added to the code. . yeet = [&quot;woo&quot;, &quot;wee&quot;, &quot;hee&quot;, &quot;hoo&quot;, &quot;yee&quot;, &quot;yoo&quot;] # recursive loop essentially continues endlessly until the exit condition is met (which ends at (i + 1)) def recursive_loop(i): if i &lt; len(yeet): record = yeet[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output woo wee hee hoo yee yoo . Dictionary/List Quiz . import getpass, sys EnstarsUnits = [&quot;ALKALOID&quot;, &quot;Trickstar&quot;, &quot;fine&quot;, &quot;Eden&quot;, &quot;Knights&quot;] EnstarsCharacters = [&quot;Hiiro&quot;, &quot;Mao&quot;, &quot;Wataru&quot;, &quot;Nagisa&quot;, &quot;Ritsu&quot;] # Lists (ignore these they aren&#39;t used in the code) Enstars = { &quot;ALKALOID&quot;: &quot;Hiiro Amagi&quot;, &quot;Trickstar&quot;: &quot;Mao Isara&quot;, &quot;fine&quot;: &quot;Wataru Hibiki&quot;, &quot;Eden&quot;: &quot;Nagisa Ran&quot;, &quot;Knights&quot;: &quot;Ritsu Sakuma&quot;, } # The dictionary/list dictionary CorrectList = {} IncorrectList = {} # Empty dictionaries used to store data def question_with_response(unit): print(&quot;What is your favorite &quot; + unit + &quot; character?&quot;) msg = input () return msg # defines and prints question; asks for input def question(): for unit in EnstarsUnits: rsp = question_with_response(unit) if (rsp != Enstars [unit]): print (rsp + &quot; is incorrect.&quot;) IncorrectList [unit] = rsp else: print (rsp + &quot; is correct.&quot;) CorrectList [unit] = rsp # defines unit as one of the keys in the dictionary # answers are marked as incorrect if they do not match the values that go with the keys question() . What is your favorite ALKALOID character? Hiiro Amagi is correct. What is your favorite Trickstar character? Mao Isara is correct. What is your favorite fine character? Wataru Hibiki is correct. What is your favorite Eden character? Nagisa Ran is correct. What is your favorite Knights character? Ritsu Sakuma is correct. . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://keiraokimoto.github.io/Fastpages/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Second Markdown Post with Image",
            "content": "Second Markdown Post . . Pretty sure I’m only supposed to put an image here so here’s an image . Images . Enjoy the snail I drew on MSPaint specifically for this page . .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/08/28/markdown-2.html",
            "relUrl": "/markdown%20posts/2022/08/28/markdown-2.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "AP Stats Quiz",
            "content": "import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) rsp = question_with_response(&quot;What is the best reason for choosing a stemplot rather than a histogram to display the distribution of a quantitative variable?&quot;) if rsp == &quot;Stemplots make it easier to determine the shape of a distribution&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;The scores on a statistics test had a mean of 25 and a standard deviation of 3. If a score of 28 was added to the distribution of scores, what would happen to the mean and standard deviation?&quot;) if rsp == &quot;The mean will increase, and standard deviation will decrease&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;There are many houses ranging from $200,000 to $500,000 in price. The few houses on the water, however, are priced up to $15 million. The distribution of house prices will be...?&quot;) if rsp == &quot;Skewed to the right&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, keira running /home/keira/anaconda3/bin/python You will be asked 3 questions. Question: What is the best reason for choosing a stemplot rather than a histogram to display the distribution of a quantitative variable? Stemplots make it easier to determine the shape of a distribution is correct! Question: The scores on a statistics test had a mean of 25 and a standard deviation of 3. If a score of 28 was added to the distribution of scores, what would happen to the mean and standard deviation? The mean will increase, and standard deviation will decrease is correct! Question: There are many houses ranging from $200,000 to $500,000 in price. The few houses on the water, however, are priced up to $15 million. The distribution of house prices will be...? Skewed to the right is correct! keira you scored 3/3 .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/08/28/TP110-python_hello.html",
            "relUrl": "/2022/08/28/TP110-python_hello.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Installation Checks",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /home/keira/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/keira/.local/share/jupyter/kernels/bash javascript /home/keira/.local/share/jupyter/kernels/javascript python3 /home/keira/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/keira/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://keiraokimoto.github.io/Fastpages/techtalk/bash_checks",
            "relUrl": "/techtalk/bash_checks",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Docx Post1",
            "content": "Graph Description Notes: . Context - Use variable/group names . | Shape (Roughly symmetric, double peaked binomial, single peaked unimodal, right or left skew) . | Outliers - Any unusual observations . | Center - The average/typical values . | Spread - Variability . | If comparing, use comparative language for center/spread (higher, lower, etc.) . | . Center: . Median - the middle point if a distribution . | Use with skewed data . | . Mean: . m = sum of terms/number of terms . | . Use with symmetric data . | . Variability: . Range = Maximum - Minimum . | ‘The context typically varies by sx from the mean of x.’ . | . Non-Resistant Measures: . Greatly affected by extreme values . | Example: Mean, standard deviation, range . | .",
            "url": "https://keiraokimoto.github.io/Fastpages/2022/08/26/Docx-Post1.html",
            "relUrl": "/2022/08/26/Docx-Post1.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "First Markdown Post",
            "content": "First Markdown Post . . Hi uhhh I’m not sure what to put here. My name is Keira Okimoto and I’m a senior. That’s about it. . Lists . Just some lists about me. . Here’s a list of countries I’ve been to: . England | Japan | Vietnam | Italy | France | Germany | . And a numbered list of birds I’ve had: . Comet | Star | Matcha | Blue | Mochi | Images . Enjoy the hedgehog I drew on MSPaint . . Code . Random code because why not . # Prints &#39;hello there&#39; print(hello there) . Tables . A random table . Column 1 Column 2 . Table | Chair | .",
            "url": "https://keiraokimoto.github.io/Fastpages/markdown%20posts/2022/08/21/markdown-1.html",
            "relUrl": "/markdown%20posts/2022/08/21/markdown-1.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "First Notebook Post",
            "content": "print(&#39;Hello world!&#39;) . Hello world! .",
            "url": "https://keiraokimoto.github.io/Fastpages/jupyter%20posts/2022/08/21/Notebook1.html",
            "relUrl": "/jupyter%20posts/2022/08/21/Notebook1.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- hide: true - branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://keiraokimoto.github.io/Fastpages/example/2020/02/20/test.html",
            "relUrl": "/example/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post45": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://keiraokimoto.github.io/Fastpages/example/2020/01/14/test-markdown-post.html",
            "relUrl": "/example/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Notes",
          "content": "Unit 3 Notes . (I’ve basically copy pasted these from the lessons for ease of access) . Unit 3.1 and 3.2 . Variables and Assignments Notes . I did my best. Ya’ll were speedrunning I am NOT a speedrunner. . Python: . Variables - Name/define; other functions can be done after naming = - Will set something equal to something else, usually a word and number or list, etc Functions can be performed when names are applied (it tells the function to apply to things with the same name) Floats - Decimals that can be used to do math/whatever a function asks for Dictionaries assign keys and values . Javascript: . ‘var xyz’ is a variable assignment (ie; variables can be assigned using var) Booleen is true/false Strings are words, such as ‘let’ Lists - const (name) = . Data Abstraction: . For APs, indexes start at 1 rather than 0 | . Python: . Lists look like: name = [“word”, “word”] | Lists are often used to store data | Lists can also be used to make more lists by using the format: list = [“Strawberry - Fruit”, “Brocolli - Vegetable”] And add: fruit = [] and vegetable = [] Code such as ‘for fruit in list’ can be used to specify what the program is supposed to do with the items under this category in the list | Split [split()] function can be used to split a string into a list | Join [join()] method takes all items in an iterable and joins them into one string; a string must be specified as a seperator | . Javascript: . this.(name) can be used to specify different types of data, (name) can be used to make a category for the data to go in | data can be displayed using var (variable name) = [ new (variable name)(“Name”, “Date”, “Age”), etc etc.]; | A function can be used afterwards to store the data, using: function (function name)(name, (variable name)) name.setRole(“Name”); this.name = name; this.variable name = [Name]; Etc., etc. | . . Unit 3.3 and 3.4 Notes . Vocab: fill in the blanks . The symbol for exponent is ^ The symbol for addition is + The symbol for subtraction is - The symbol for multiplication is * The symbol for division is / The symbol for modulus is % An algorithm is a sequence of steps that accomplishes a specific task . Index is a number representing a position, like a character’s position in a string or a string’s position in a list. Concatenation is when two strings are combined with each other. Length is the amount of items in a string. A substring is a part of a string. . Length - the number of characters/item in a string | Addition, subtraction, and division are all represented by their respective symbols | The only differences are multiplication and exponents (* and ^) | Concatenation (which I cannot spell) is essentially adding 2 strings together | Substrings are parts of strings | The length of a string is the amount of items or numbers in it | ‘Str’ can be used to initialize something for printing | ‘len’ tells the code to consider the entirety of the string’s length . Unit 3.5, 3.6, and 3.7 Notes . | Boolean - 2 options (ex: true/false, yes/no, 0/1) | Relational Operator - Operators that can work between any two values of the same type | Logical Operator - Operators that work on operands to produce a single boolean result (such as and or not) | Relational operators go first, then logical . | All programs have conditionals | Conditionals drive selection; they dictate what happens in a program based on whether something is true or false | Usually lots of if/else statements | Algorithm - A set of instructions that accomplish a task | Selection - The process that determines which parts of an algoritm is being executed based on a condition that is true or false | If/else statements change based on what has occured before | Nested Conditionals are like conditionals within conditionals | (Ex: If condtion 1 is met, condition 2 will occur, and if condition 2 occurs, condition 3 can occur) . Unit 3.8 and 3.10 Notes . | Pseudocode Operation | Python Syntax | Description | |:———————–:|—————|:——————————————————————————————————————————:| | aList[i] | aList[i] | Accesses the element of aList at index i | | x ← aList[i] | x = aList(i) | Assigns the element of aList at index i to a variable ‘x’ | | aList[i] ← x | aList(i) = x | Assigns the value of a variable ‘x’ to the element of a List at index i | | aList[i] ← aList[j] | aList[i] = aList[j] | Assigns value of aList[j] to aList[i] | | INSERT(aList, i, value) | aList.insert(i, value) | _value is placed at index i in aList. Any element at an index greater than i will shiftone position to the right. _ | | APPEND(aList, value) | aList.append(value) | value is added as an element to the end of aList and length of aList is increased by 1 | | REMOVE(aList, i) | aList.pop(i)ORaList.remove(value) | _Removes item at index i and any values at indices greater than i shift to the left. Length of aList decreased by 1. _ | . | For Loops - Loops that apply a certain algorithm or function to an entire list of similar things; iterates until told not to/until conditions are met (infinite) | Recursive Loops - Loops that run through the code until reaching a specific break point | While Loops - run until the end of the list (sometimes not in some cases) | . . Unit 3.9 and 3.11 Notes . Binary search: . One of the two searches that can be used | Can only be used with sorted arrays | Can be used in a while loop or recursive function | Uses a min/max value, halves it, and tests to see if the selected half value matches a requirement; if it doesn’t, it takes either a higher or lower value (whichever is closer) to retest | . Sequential search: . Usually slower than a Binary Search, as it goes through every element in a list | Can be used in a while loop or recursive function | Should not be used for long calculations unless you want to explode your computer . Unit 3.12 and 3.13 Notes . | . Procedure: A named group of programming instructions that may have parameters and return values; can also be referred as method or function, depending on the language. . Parameters: Input values of a procedure . Arguments: Specify the values of the parameters when a procedure is called . Modularity: Separating a program’s functions into independent blocks that work together to allow a program to function . Procedural Abstraction: The name for a process that allows a procedure to be used while only knowing what it does, and not how the program executes the procedure . What are some other names for procedures?: Processes, operations, modules . Why are procedures effective?: Procedures are effective because they allow for code to be more organized while still retaining functionality . Additional Notes: . Procedures interrupt a series of statements and makes the program execute the procedure instead | The original code will be run after the procedure is executed | Procedures may or may not return values (such as numbers or booleans) | Procedures need names to be called (Ex: ‘convertDecimalToBinary’ for a decimal to binary converter) | Procedures allow for additional cells outside of code to be changed without having to change the code itself . Unit 3.14 and 3.15 Notes . | . Packages allow a python user to import methods from a library, and use the methods in their code. Most libraries come with documentation on the different methods they entail and how to use them, and they can be found with a quick Google search. Methods are used with the following: . Some libraries are always installed, such as those with the list methods which we have previously discussed. But others require a special python keyword called import. We will learn different ways to import in Challenge 1. . Sometimes we only need to import a single method from the package. We can do that with the word ‘from’, followed by the package name, then the word ‘import’, then the method. This will alllow you to use the method without mentioning the package’s name, unlike what we did before, however other methods from that package cannot be used. To get the best of both worlds you can use ‘*’. . To import a method as an easier name, just do what we did first, add the word ‘as’, and write the name you would like to use that package as. . Random values - Randomly generated numbers created using a large set of numbers and a mathematical algorithm | Random values are good for randomizing outputs, which can make sure that there are not as many similar outputs | Random values can also be used for anything including probability, which includes gacha, dice rolls, and more | Really not sure what other notes I can add here | Remember to import random before trying to use a randomizer . Unit 3.16 Notes . | Simulations are used to simplify/modify certain variables | Simulations can contain bias | They can be used to simulate things as tests (ie, launching a bomb) when these actions are too dangerous/impractical to do in the real world | Simulations can also be used to create situations that are too difficult to recreate in the real world (specific weather conditions for example) | Random modules define series of objects that can be generated randomly | Randomization helps simulations, as they can help predict many varying probablilities of a simulation | Abstractions use conditionals to execute one part of the code only when a particular condition is met, repeat looping, simplification, and it does not request input from the user or display output to the user | It is far cheaper to create a simulation than to do said actions in real life . Taught Unit 3.17 and 3.18, no notes for these units. . | .",
          "url": "https://keiraokimoto.github.io/Fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Bootstraps Table + Table Link",
          "content": "| Javascript Table | Extra Statistics Unit II Vocabulary | Team Project Plan | Groupwork | HTML Bootstraps Table | API | . Javascript Tutorial Table Link . &lt;!doctype html&gt; . Insert title here . Insert title here . . Bread Cheese Milk Sourdough Parmasan Rice Wheat Chedder Almond Potato Swiss Coconut",
          "url": "https://keiraokimoto.github.io/Fastpages/categories/",
          "relUrl": "/categories/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "About Me",
          "content": "Hello! My name is Keira Okimoto and I’m a senior going to Del Norte High School. I have two birds, Blue (male) and Mochi (female). I like to spend my time drawing, sleeping, eating, or playing games. That’s…. Pretty much it. .",
          "url": "https://keiraokimoto.github.io/Fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "API",
          "content": "| Customer Service Survey | . APIs in this Sub Menu . HTML, CSS, and JavaScript are the front-end of the API. Python and API resource definitions are used for RESTful API definitions. Abstraction of Frontend and Backend code, the exchange of standard data format (JSON), and guidelines for exchange (REST) is a technique that saves a lot of time between developers. Learning APIs is a highly recommended step for every developer trying to break into the world of tech. . Covid19: RapidAPI example. This is introducing APIs by accessing something that already exists. RapidAPI shows how many practice RESTful definitions. Almost any data source imagined can be accessed here. | Jokes: An introduction to Python RESTful API libraries. A Python List is used to make a Data Model, but persistence in this technique is limited, each time server is refreshed data is lost. This example is great for learning, but data is considered volatile. | Users: Another RESTful API library example. However, this backend establishes data persistence through the use of a database. This data if properly managed in deployment and migrated when changed can last forever. | . Web API Overview . . A Web API is an application programming interface typically for a web browser. Non-changing or Static Endpoints are used in interacting with the server-side Web APIs. RESTful Web APIs use HTTP methods to access resources via URL parameters, and use JSON for transmitting text between client and server. Server. In these examples, we will be using Python to define REST APIs. Python tools are very popular for building RESTful APIs | REST: Representational State Transfer. A set of guidelines on how to architect a network-connected software system. | Client-server: One guideline is a client and server must be decoupled from each other, allowing each to develop independently. | Layered system: The client may access the resources on the server indirectly through other layers such as a proxy or using authentication. This will be clarified by application and security requirements. | . Client. JavaScript is the frontend language used to consume data from the Python defined REST APIs. Fetch will be used to make HTTP requests, as well as handle HTTP response. There are four basic HTTP methods, they align with Create, Read, Update, Delete (CRUD). | GET =&gt; Retrieve/Read data | POST =&gt; Create data | PUT =&gt; Update data | DELETE =&gt; Delete data | . REST endpoints will have similarity from application to application. In planning APIs, for a Users system you can anticipate key methods. The Users RESTful APIs would likely contain these endpoints. | GET: /users =&gt; Get a list of users | GET: /users(id) =&gt; Get a single user | POST: /users =&gt; Create a new user | PUT: /users(id) =&gt; Update a user | DELETE: /users(id) =&gt; Delete a user | . Once a RESTful API receives and processes an HTTP request, it will return an HTTP response. Included in this response is an HTTP status code. Common status codes are shown. | 200 =&gt; OK, this response will then have the promise of JSON data | 400 =&gt; Bad Request | 404 =&gt; Not Found | 500 =&gt; Internal Server Error (aka bug) | . . . .",
          "url": "https://keiraokimoto.github.io/Fastpages/api/overview",
          "relUrl": "/api/overview",
          "date": ""
      }
      
  

  
      ,"page6": {
          "title": "Vocab",
          "content": "Compsci Vocab . Unit 2 Binary/Data Terms . Bits - the smallest unit of data that a computer can process and store | Bytes - A unit of data that is eight binary digits long | Hexadecimal/Nibbles - A base-16 numbering system that uses the digits 0 through 9 and the letters A through F to represent data, including nibbles and bytes | . Binary Numbers: . Unsigned Integer - Integers that have the property that they don’t have a + or - sign associated with them | Signed Integer - Integers that can be positive or negative | Floating Point - A variable type that is used to store floating-point number values | . Binary Data Abstractions: . Boolean - A logical data type that can have only the values true or false (Ex:) | . | ASCII - A standard data-encoding format for electronic communication between computers | Unicode - The universal character representation standard for text in computer processing | RGB - A system for representing the colors to be used on a computer display | . Data Compression: . Lossy - A data encoding and compression technique that deliberately discards some data in the compression process | Lossless - A type of compression that restores and rebuilds file data in its original form after the file is decompressed | . Unit 3 Algorithm/Programming Terms . Variables - an abstract storage location paired with an associated symbolic name | Data Types - Strings, Characters,Integers, Floats, or Booleans | Assignment Operators - An assignment statement that sets aor re-sets the value sto- - red in the storage location(s) denoted by a variable name | . Managing Complexity with Variables: . Lists - An abstract data type that represents a finite number of ordered values, where the same value may occur more than once | 2D Lists - A list used to store objects (Ex: List = [“Item 1”, “Item 2”, “Item 3”,]) | . | Dictionaries - An abstract data type that defines an unordered collection of data as a set of key-value pairs (Ex: variable1: A, variable2: B, variable3: C) | . | Class - A template definition of the method s and variable s in a particular kind of object | Algorithms - A specific procedure for solving a well-defined computational problem (Ex: def convertDecToBinary being stated then recalled later in the code using only ‘convertDecToBinary’) | . | Sequence - When your computer will run your code in order, one line at a time from the top to the bottom of your program | Selection - A programming construct where a section of code is run only if a condition is met | Iteration - A process where a set of instructions or structures are repeated in a sequence a specified number of times or until a condition is met (Ex: if x &gt; y: print x, else: (etc., etc.)) | . | Expressions - A computer program statement that evaluates to some value (Ex: * = Multiply, + = Add) | . | Comparison Operators - Operators that compare values and return true or false (Ex: if x &gt; y: print true, else: false) | . | Booleans Expressions and Selection - When one of two options are selected: True or False, Yes or No, etc. (Ex: if x &gt; y: print true, else: end loop) | . | Booleans Expressions and Iteration - When one of two options are selected: True or False, Yes or No, etc. in a repeating loop (Ex: if x &gt; y: print true, else: false) | . | Truth Tables - A table that shows all possible combinations of inputs and, for each combination, the output that the circuit will produce (Ex: alist.append appends, alist.remove removes, etc.) | . | Characters - A display unit of information equivalent to one alphabetic letter or symbol (Ex: A, B, C, = 1, 2, 3 (but binary is probably better)) | . | Strings - An array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding (Ex: String = [‘Item 1’, ‘Item 2’, ‘Item 3’]) | . | Length - The length of characters a computer’s processor can handle (Ex: 8-bit, 16-bit, etc.) | . | Concatenation - The operation of joining two strings together (Ex: string3 = string1 + string2) | . | Upper - A value that is greater than or equal to every element of a set of data | Lower - A value that is lesser than or equal to every element of a set of data | Traversing Strings - Accessing all the elements of the string one after the other by using the subscript (Ex: if/else statement that evaluates each element in a string) | . | . Python: . If, Elif, Else conditionals - Conditional statements that provide you with the decision making that is required when you want to execute code based on a particular condition (Ex: if x &gt; y: print x, else: (etc., etc.)) | . | Nested Selection Statements - Structures are used when more than one decision must be made before carrying out a task (Ex: if x &gt; y:, if x &gt; 10, print x, else: print y, else: (etc., etc.)) | . | For, While loops with Range, with List - Loops used to repeat a section of code an unknown number of times until a specific condition is met | Combining loops with conditionals to Break - Loops that stop when a specific condition is met, when they would normally continue forever otherwise (Ex: while loop with an if/else print that will end the loop) | . | Continue - A statement that forces the next iteration of the loop to take place, skipping any code in between | Procedural Abstraction - Sections of code that have variable parameters | Python Def procedures - Procedures that allow us to group a block of code under a name, known as a procedure name | Parameters - A special kind of variable used in a function to refer to one of the pieces of data provided as input to the function | Return Values - A value that a function returns to the calling script or function when it completes its task (Ex: return example) | . | .",
          "url": "https://keiraokimoto.github.io/Fastpages/vocabulary/",
          "relUrl": "/vocabulary/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://keiraokimoto.github.io/Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}