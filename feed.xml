<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://keiraokimoto.github.io/Fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://keiraokimoto.github.io/Fastpages/" rel="alternate" type="text/html" /><updated>2022-11-04T13:58:38-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/feed.xml</id><title type="html">Keira’s Blog</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Night at the Museum (11/3)</title><link href="https://keiraokimoto.github.io/Fastpages/post/2022/11/04/markdown-16.html" rel="alternate" type="text/html" title="Night at the Museum (11/3)" /><published>2022-11-04T00:00:00-05:00</published><updated>2022-11-04T00:00:00-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/post/2022/11/04/markdown-16</id><author><name></name></author><category term="post" /><summary type="html"><![CDATA[Night at the Museum 11/3 When I went to Night at the Museum on Thursday, I saw a lot of projects from this class and a few others. One of the projects I saw from this class was from Noor and her group, where they used a search function that could use emotions (and synonyms of the provided emotion words) to provide a song that went with the given emotion. The program also featured an API that had each song on it, as well as a way for the user to vote for which emotion the song represented. The program would register the users’ votes for each song, for example, a Mitski song being voted as sad. The program would then take this information and match it to an emotion, so it would appear when that emotion was added in the search function.]]></summary></entry><entry><title type="html">AP Classroom Completed Assignments (10/17)</title><link href="https://keiraokimoto.github.io/Fastpages/post/2022/10/16/markdown-15.html" rel="alternate" type="text/html" title="AP Classroom Completed Assignments (10/17)" /><published>2022-10-16T00:00:00-05:00</published><updated>2022-10-16T00:00:00-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/post/2022/10/16/markdown-15</id><author><name></name></author><category term="post" /><summary type="html"><![CDATA[AP Classroom Completed Assignments (10/17)]]></summary></entry><entry><title type="html">AP Classroom Completed Assignments</title><link href="https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-14.html" rel="alternate" type="text/html" title="AP Classroom Completed Assignments" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-14</id><author><name></name></author><category term="post" /><summary type="html"><![CDATA[AP Classroom Completed Assignments]]></summary></entry><entry><title type="html">College Board Program Design</title><link href="https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-13.html" rel="alternate" type="text/html" title="College Board Program Design" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/post/2022/10/09/markdown-13</id><author><name></name></author><category term="post" /><summary type="html"><![CDATA[College Board Program Design]]></summary></entry><entry><title type="html">Python RapidAPI</title><link href="https://keiraokimoto.github.io/Fastpages/techtalk/rapidapi" rel="alternate" type="text/html" title="Python RapidAPI" /><published>2022-10-07T00:00:00-05:00</published><updated>2022-10-07T00:00:00-05:00</updated><id>https://keiraokimoto.github.io/Fastpages/techtalk/PBL-python_rapidapi</id><author><name></name></author><category term="1.A" /><category term="5.B" /><category term="5.D" /><category term="api" /><category term="rapidapi" /><summary type="html"><![CDATA[APIs can be found all over the internet. A great consolidator of many APIs is RapidAPI. In this blog we will use a site to consolidates API stats. Learning a few lines of code and you can start extracting lots of data from the internet via APIs.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://keiraokimoto.github.io/Fastpages/images/rapidapi.png" /><media:content medium="image" url="https://keiraokimoto.github.io/Fastpages/images/rapidapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>